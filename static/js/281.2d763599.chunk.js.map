{"version":3,"file":"static/js/281.2d763599.chunk.js","mappings":"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","sources":["CommonComponent/Pagination/index.tsx","pages/UserManagement/TrashUserListPage/index.tsx","../node_modules/@mui/icons-material/Restore.js","../node_modules/@mui/icons-material/Warning.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Pagination,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  SelectChangeEvent,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\ninterface PaginationProps {\r\n    pagination: {\r\n      rowsPerPage: number;\r\n      totalPages: number;\r\n      page: number;\r\n    };\r\n    handleRowsPerPageChange: (event: SelectChangeEvent<number>, child: React.ReactNode) => void;\r\n    handlePageChange: (event: React.ChangeEvent<unknown>, value: number) => void;\r\n  }\r\n\r\nconst useStyles = makeStyles({\r\n  paginationContainer: {\r\n    marginTop: \"2rem\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  dropdownRowPerPageLabel: {\r\n    marginRight: \"1rem\",\r\n  },\r\n  dropdownRowPerPage: {\r\n    marginRight: \"3rem\",\r\n  },\r\n});\r\n\r\nconst PaginationBar: React.FC<PaginationProps> = ({\r\n  pagination,\r\n  handleRowsPerPageChange,\r\n  handlePageChange,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.paginationContainer}>\r\n      {/* Dropdown menu for rows per page */}\r\n     \r\n      <FormControl className={classes.dropdownRowPerPage}>\r\n        <Select\r\n          labelId=\"rows-per-page-label\"\r\n          id=\"rows-per-page\"\r\n          value={pagination.rowsPerPage}\r\n          onChange={handleRowsPerPageChange}\r\n        >\r\n          <MenuItem value={5}>5</MenuItem>\r\n          <MenuItem value={10}>10</MenuItem>\r\n          <MenuItem value={20}>20</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      {/* Pagination */}\r\n      <Pagination\r\n        count={pagination.totalPages} // Total number of pages\r\n        page={pagination.page} // Current page\r\n        onChange={handlePageChange} // Event handler for page change\r\n        variant=\"outlined\"\r\n        shape=\"rounded\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginationBar;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  SelectChangeEvent,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Typography,\r\n  Container,\r\n  CardMedia,\r\n} from \"@mui/material\";\r\nimport PaginationBar from \"../../../CommonComponent/Pagination\";\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\nimport RestoreIcon from '@mui/icons-material/Restore';\r\nimport { useAuthToken } from \"../../../utils/Auth/authUtils\";\r\nimport { apiUrl } from \"../../../variable/globalVariable\";\r\n\r\n\r\n// Define an interface representing the structure of the data returned from the API\r\ninterface User {\r\n    userId: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    phone: string;\r\n    dateOfBirth: null;\r\n    roleEnum: string;\r\n    createdAt: string;\r\n    createdBy: string;\r\n    updatedBy: string;\r\n    isDeleted: boolean;\r\n}\r\n\r\nfunction TrashUserListPage() {\r\n  const accessToken = useAuthToken();\r\n  const [list, setList] = useState<User[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showDeletePopup, setShowDeletePopup] = useState(false);\r\n  const [itemIdToDelete, setItemIdToDelete] = useState<number | null>(null);\r\n  // Pagination\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    rowsPerPage: 5,\r\n    totalPages: 1,\r\n  });\r\n  const { id } = useParams();\r\n  const { page, rowsPerPage } = pagination;\r\n\r\n\r\n  // [Handle] Fetching Trash List\r\n  useEffect(() => {\r\n    loadList();\r\n  }, [page, rowsPerPage]);\r\n\r\n  const loadList = async () => {\r\n    // Prevent concurrent API calls\r\n    if (loading) return;\r\n    setLoading(true); // Set loading state to true\r\n\r\n    try {\r\n      const result = await axios.get(\r\n        `${apiUrl}/user/trash?pageNumber=${pagination.page - 1}&pageSize=${pagination.rowsPerPage}`,\r\n        {\r\n          headers: {\r\n              'Authorization': `Bearer ${accessToken}` // Set the token in the headers\r\n          }\r\n        }\r\n      );\r\n      console.log(result)\r\n      setList(result.data.content);\r\n\r\n      // pagination\r\n      const totalItems = result.data.totalElements;\r\n      console.log(totalItems)\r\n      const totalPages = Math.ceil(totalItems / pagination.rowsPerPage);\r\n      setPagination({\r\n        ...pagination,\r\n        totalPages: totalPages,\r\n      });\r\n    } catch (error: any) {\r\n      if (error.response && error.response.status === 404) {\r\n        // Handle 404 error here\r\n        setList([]);\r\n      } else {\r\n        // Handle other errors\r\n        alert(error);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // [Handle] Pagination\r\n  const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: value,\r\n    });\r\n  };\r\n  const handleRowsPerPageChange = (event: SelectChangeEvent<number>, child: React.ReactNode) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: 1,\r\n      rowsPerPage: event.target.value as number,\r\n    });\r\n  };\r\n\r\n  // [Handle] Restore\r\n  const restoreItem = async (id: number) => {\r\n    try {\r\n      await axios.put(`${apiUrl}/user/restore/${id}`,\r\n      {},\r\n      {\r\n        headers: {\r\n            'Authorization': `Bearer ${accessToken}` // Set the token in the headers\r\n        }\r\n    }\r\n      );\r\n      loadList();\r\n    } catch (error) {\r\n        console.error(\"Error when restore:\", error);\r\n    }\r\n  };\r\n\r\n  // [Display + Handle] Permanently-Delete\r\n  const deleteItem = async (id: number) => {\r\n    await axios.delete(`${apiUrl}/user/permanently-delete/${id}`,\r\n    {\r\n      headers: {\r\n          'Authorization': `Bearer ${accessToken}` // Set the token in the headers\r\n      }\r\n  }\r\n    );\r\n    loadList();\r\n    setShowDeletePopup(false);\r\n  };\r\n  const handleDeleteClick = (itemId: number) => {\r\n    setItemIdToDelete(itemId);\r\n    setShowDeletePopup(true);\r\n  };\r\n  const handleDeleteConfirm = () => {\r\n    itemIdToDelete && deleteItem(itemIdToDelete);\r\n  };\r\n  const handleDeleteCancel = () => {\r\n    setShowDeletePopup(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <Container sx={{minWidth: \"100%\"}}>\r\n\r\n      {loading ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <TableContainer style={{ maxHeight: \"350px\", overflowY: \"auto\"}}>\r\n          <Table className=\"border shadow\">\r\n            <TableHead sx={{ backgroundColor: '#000000' }}>\r\n              <TableRow>\r\n                <TableCell align=\"center\" sx={{ color: '#ffffff' }}>ID</TableCell>\r\n                <TableCell align=\"center\" sx={{ color: '#ffffff' }}>Name</TableCell>\r\n                <TableCell align=\"center\" sx={{ color: '#ffffff' }}>Role</TableCell>\r\n                <TableCell align=\"center\" sx={{ color: '#ffffff' }}>Email</TableCell>\r\n                <TableCell align=\"center\" sx={{ color: '#ffffff' }}>Phone</TableCell>\r\n                <TableCell align=\"center\" sx={{ color: '#ffffff' }}>Date Of Birth</TableCell>\r\n                <TableCell align=\"center\" sx={{ color: '#ffffff' }}>Create At</TableCell>\r\n                <TableCell align=\"center\" sx={{ color: '#ffffff' }}>Create By</TableCell>\r\n                <TableCell align=\"center\" sx={{ color: '#ffffff' }}>Update By</TableCell>\r\n                <TableCell align=\"center\" sx={{ color: '#ffffff' }}></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n\r\n            {list.length === 0 ? (\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell colSpan={7} align=\"center\" style={{ fontSize: \"14px\" }}>\r\n                    (Have no any record founded!)\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            ) : (\r\n              <TableBody>\r\n                {list.map((listItem, index) => (\r\n                  <TableRow key={listItem.userId}>\r\n                    <TableCell align=\"center\"  style={{ fontSize: \"14px\", minWidth: 30 }}>{listItem.userId}</TableCell>\r\n                    <TableCell align=\"center\"  style={{ fontSize: \"14px\", minWidth: 200 }}>{`${listItem.firstName} ${listItem.lastName}`}</TableCell>\r\n                    <TableCell align=\"center\"  style={{ fontSize: \"14px\", minWidth: 30 }}>{listItem.roleEnum}</TableCell>\r\n                    <TableCell align=\"center\"  style={{ fontSize: \"14px\", minWidth: 30 }}>{listItem.email}</TableCell>\r\n                    <TableCell align=\"center\"  style={{ fontSize: \"14px\", minWidth: 30 }}>{listItem.phone}</TableCell>\r\n                    <TableCell align=\"center\"  style={{ fontSize: \"14px\", minWidth: 300 }}>{moment(listItem.dateOfBirth).format('MMMM Do YYYY, h:mm:ss a') }</TableCell>\r\n\r\n                    <TableCell align=\"center\"  style={{ fontSize: \"14px\", minWidth: 300 }}>\r\n                      {moment(listItem.createdAt).format('MMMM Do YYYY, h:mm:ss a') }\r\n                      </TableCell>\r\n                    <TableCell align=\"center\"  style={{ fontSize: \"14px\", minWidth: 100 }}>{listItem.createdBy}</TableCell>\r\n                    <TableCell align=\"center\"  style={{ fontSize: \"14px\", minWidth: 100 }}>{listItem.updatedBy}</TableCell>\r\n                    <TableCell align=\"center\" style={{ minWidth: 430 }}>\r\n                      <Button\r\n                          variant=\"outlined\"\r\n                          color=\"info\"\r\n                          sx={{ mx: 2 }}\r\n                          onClick={() => restoreItem(listItem.userId)}\r\n                      >\r\n                          <RestoreIcon sx={{ marginRight: \"4px\", fontSize: \"24px\" }} />\r\n                          Restore\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"error\"\r\n                        onClick={() => handleDeleteClick(listItem.userId)}\r\n                        sx={{ mx: 2 }}\r\n                      >\r\n                        <WarningIcon sx={{ marginRight: \"4px\", fontSize: \"24px\" }} />\r\n                        Permanently Delete\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            )}\r\n          </Table>\r\n        </TableContainer>\r\n      )}\r\n\r\n      <PaginationBar\r\n        pagination={pagination}\r\n        handleRowsPerPageChange={handleRowsPerPageChange}\r\n        handlePageChange={handlePageChange}\r\n      />\r\n\r\n      {/* [POPUP] Confirm Permanently-Deleted */}\r\n      {showDeletePopup && (\r\n        <Dialog open={showDeletePopup} onClose={handleDeleteCancel}>\r\n          <DialogTitle>Confirm Delete</DialogTitle>\r\n          <DialogContent>\r\n            This action cannot restore!\r\n            Are you sure want to delete this user?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteConfirm} color=\"error\">\r\n              Delete\r\n            </Button>\r\n            <Button onClick={handleDeleteCancel}>\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      )}\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TrashUserListPage\r\n;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9m-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8z\"\n}), 'Restore');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M1 21h22L12 2zm12-3h-2v-2h2zm0-4h-2v-4h2z\"\n}), 'Warning');"],"names":["useStyles","makeStyles","paginationContainer","marginTop","display","justifyContent","alignItems","dropdownRowPerPageLabel","marginRight","dropdownRowPerPage","_ref","pagination","handleRowsPerPageChange","handlePageChange","classes","_jsxs","className","children","_jsx","FormControl","Select","labelId","id","value","rowsPerPage","onChange","MenuItem","Pagination","count","totalPages","page","variant","shape","accessToken","useAuthToken","list","setList","useState","loading","setLoading","showDeletePopup","setShowDeletePopup","itemIdToDelete","setItemIdToDelete","setPagination","useParams","useEffect","loadList","async","result","axios","get","concat","apiUrl","headers","console","log","data","content","totalItems","totalElements","Math","ceil","error","response","status","alert","handleDeleteCancel","Container","sx","minWidth","TableContainer","style","maxHeight","overflowY","Table","TableHead","backgroundColor","TableRow","TableCell","align","color","length","TableBody","colSpan","fontSize","map","listItem","index","userId","firstName","lastName","roleEnum","email","phone","moment","dateOfBirth","format","createdAt","createdBy","updatedBy","Button","mx","onClick","put","restoreItem","RestoreIcon","handleDeleteClick","itemId","WarningIcon","PaginationBar","event","child","target","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","handleDeleteConfirm","delete","deleteItem","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}