{"version":3,"file":"static/js/346.690fd558.chunk.js","mappings":"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","sources":["pages/DetailOrderTracking/FilterStatus/index.tsx","pages/DetailOrderTracking/Pagination/index.tsx","pages/DetailOrderTracking/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Tabs, Tab } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useAuthToken } from \"../../../utils/Auth/authUtils\";\r\nimport { apiUrl } from \"../../../variable/globalVariable\";\r\n\r\ninterface FilterStatusProps {\r\n  handleChangeSelectedStatus: (status: string) => void;\r\n  selectedStatusDefault: string\r\n}\r\n\r\nconst FilterStatus: React.FC<FilterStatusProps> = ({\r\n  handleChangeSelectedStatus,\r\n  selectedStatusDefault\r\n}) => {\r\n  const accessToken = useAuthToken();\r\n  const [statuses, setStatuses] = useState<string[]>([]);\r\n  const [selectedStatus, setSelectedStatus] = useState<string>(selectedStatusDefault);\r\n\r\n  useEffect(() => {\r\n    fetchTypes();\r\n  }, []);\r\n\r\n  const fetchTypes = async () => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/order/order-item-status-list`, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`, // Set the token in the headers\r\n        },\r\n      });\r\n\r\n      // console.log(response.data)\r\n      setStatuses(response.data);\r\n    } catch (error: any) {\r\n      if (error.response && error.response.status === 404) {\r\n        // Handle 404 error here\r\n        setStatuses([]);\r\n      } else {\r\n        // Handle other errors\r\n        alert(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChangeStatus = (event: React.SyntheticEvent, status: string) => {\r\n    setSelectedStatus(encodeURIComponent(status));\r\n    handleChangeSelectedStatus(encodeURIComponent(status)); // Pass the selected category to the parent component\r\n  };\r\n\r\n  return (\r\n    <Tabs\r\n      variant=\"scrollable\"\r\n      scrollButtons=\"auto\"\r\n      aria-label=\"category tabs\"\r\n      value={selectedStatus}\r\n      onChange={handleChangeStatus}\r\n      style={{\r\n        background: \"#ffffff\",\r\n        borderBottom: \"1px solid #b2b2b2\",\r\n        borderRadius: \"4px\",\r\n        paddingTop: \"3rem\",\r\n      }}\r\n      sx={{\r\n        \"& .MuiTabScrollButton-root\": {\r\n          color: \"#000000\",\r\n        },\r\n        \"& .css-ptiqhd-MuiSvgIcon-root\": {\r\n          // Use this selector for the SVG icon within scroll buttons\r\n          width: \"2rem\", // Adjust the width of the SVG icon\r\n          height: \"2rem\", // Adjust the height of the SVG icon\r\n        },\r\n        \"& .MuiTabs-indicator\": {\r\n          backgroundColor: \"rgb(124, 3, 3)\", // Change the background color\r\n          width: \"50px\",\r\n          height: \"3px\",\r\n          borderRadius: \"10px\", // Adjust the width of the indicator\r\n        },\r\n      }}\r\n    >\r\n      {statuses.map((status, index) => (\r\n        <Tab\r\n          sx={{ margin: \"auto\" }}\r\n          key={index}\r\n          label={status.replace(/_/g, \" \")}\r\n          value={status}\r\n          style={{ color: \"#000000\", fontSize: \"14px\" }}\r\n        />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default FilterStatus;\r\n","import React from \"react\";\r\nimport {\r\n  Pagination,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  SelectChangeEvent,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\ninterface PaginationProps {\r\n    pagination: {\r\n      rowsPerPage: number;\r\n      totalPages: number;\r\n      page: number;\r\n    };\r\n    handleRowsPerPageChange: (event: SelectChangeEvent<number>, child: React.ReactNode) => void;\r\n    handlePageChange: (event: React.ChangeEvent<unknown>, value: number) => void;\r\n  }\r\n\r\nconst useStyles = makeStyles({\r\n  paginationContainer: {\r\n    marginTop: \"2rem\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  dropdownRowPerPageLabel: {\r\n    marginRight: \"1rem\",\r\n  },\r\n  dropdownRowPerPage: {\r\n    marginRight: \"3rem\",\r\n  },\r\n});\r\n\r\nconst PaginationBar: React.FC<PaginationProps> = ({\r\n  pagination,\r\n  handleRowsPerPageChange,\r\n  handlePageChange,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.paginationContainer}>\r\n      {/* Dropdown menu for rows per page */}\r\n\r\n      <FormControl className={classes.dropdownRowPerPage}>\r\n        <Select\r\n          labelId=\"rows-per-page-label\"\r\n          id=\"rows-per-page\"\r\n          value={pagination.rowsPerPage}\r\n          onChange={handleRowsPerPageChange}\r\n        >\r\n          <MenuItem value={8}>8</MenuItem>\r\n          <MenuItem value={16}>16</MenuItem>\r\n          <MenuItem value={24}>24</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      {/* Pagination */}\r\n      <Pagination\r\n        count={pagination.totalPages} // Total number of pages\r\n        page={pagination.page} // Current page\r\n        onChange={handlePageChange} // Event handler for page change\r\n        variant=\"outlined\"\r\n        shape=\"rounded\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginationBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useAuthToken } from \"../../utils/Auth/authUtils\";\r\nimport FilterStatus from \"./FilterStatus\";\r\nimport PaginationBar from \"./Pagination\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  SelectChangeEvent,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\r\nimport axios from \"axios\";\r\nimport { apiUrl } from \"../../variable/globalVariable\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: \"auto\",\r\n    \"@media (min-width: 376px)\": {\r\n      padding: \"1rem\",\r\n    },\r\n  },\r\n  filterContainer: {\r\n    position: \"fixed\",\r\n    top: \"9.5rem\",\r\n    left: 0,\r\n    width: \"100%\",\r\n    zIndex: 999,\r\n    paddingTop: \"0\",\r\n  },\r\n});\r\n\r\n\r\ninterface Dish {\r\n  dishId: number;\r\n  name: string;\r\n  categoryEnum: string;\r\n  discount: number;\r\n  mealSet: string;\r\n  image: string;\r\n  originalPrice: number;\r\n  preparationTime: number;\r\n\r\n  createdAt: string;\r\n  createdBy: string;\r\n  updatedBy: string;\r\n  deleted: boolean;\r\n}\r\n\r\nfunction DetailOrderTracking() {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const { userId, orderStatus } = location.state || {};\r\n  const accessToken = useAuthToken();\r\n\r\n  const [list, setList] = useState<Dish[]>([]); // State for list of dishes\r\n  const [loading, setLoading] = useState(false);\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    rowsPerPage: 8,\r\n    totalPages: 1,\r\n  });\r\n  const [selectedStatus, setSelectedStatus] = useState(orderStatus || \"COMPLETED\");\r\n  const { page, rowsPerPage } = pagination;\r\n\r\n  // [Handle] Fetching Dish List\r\n  useEffect(() => {\r\n    loadList()\r\n  }, [page, rowsPerPage, selectedStatus]);\r\n  const loadList = async () => {\r\n    // Prevent concurrent API calls\r\n    if (loading) return;\r\n    setLoading(true); // Set loading state to true\r\n\r\n    try {\r\n      const params = {\r\n        userId: userId,\r\n        status: selectedStatus ? selectedStatus : orderStatus,\r\n        pageNumber: pagination.page - 1,\r\n        pageSize: pagination.rowsPerPage\r\n      }\r\n\r\n      const result = await axios.get(\r\n        `${apiUrl}/order/detail-order-tracking`,\r\n        {\r\n            params,\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`,\r\n            }\r\n        }\r\n      );\r\n      console.log(result)\r\n      setList(result.data.content);\r\n\r\n      // pagination\r\n      const totalItems = result.data.totalElements;\r\n      // console.log(\"Total Item: \",totalItems);\r\n      const totalPages = Math.ceil(totalItems / pagination.rowsPerPage);\r\n      setPagination({\r\n        ...pagination,\r\n        totalPages: totalPages,\r\n      });\r\n\r\n      // Scroll to List Dishes section after fetching data for new category\r\n      // if (listDishesRef.current) {\r\n      //   listDishesRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n      // }\r\n    } catch (error: any) {\r\n      if (error.response && error.response.status === 404) {\r\n        // Handle 404 error here\r\n        setList([]);\r\n      } else {\r\n        // Handle other errors\r\n        alert(error);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  // [Handle] pagination changes\r\n  const handlePageChange = (\r\n    event: React.ChangeEvent<unknown>,\r\n    value: number\r\n  ) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: value,\r\n    });\r\n  };\r\n\r\n  // [Handle] rows per page change\r\n  const handleRowsPerPageChange = (\r\n    event: SelectChangeEvent<number>,\r\n    child: React.ReactNode\r\n  ) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: 1,\r\n      rowsPerPage: event.target.value as number,\r\n    });\r\n  };\r\n\r\n  // [Handle] change of selected status\r\n  const handleChangeSelectedStatus = (status: string) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: 1,\r\n    });\r\n    setSelectedStatus(status);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* FILTER STATUS TYPE */}\r\n      <div className={classes.filterContainer}>\r\n        <FilterStatus\r\n            handleChangeSelectedStatus={handleChangeSelectedStatus}\r\n            selectedStatusDefault={orderStatus}\r\n        />\r\n      </div>\r\n\r\n      {/* LIST OF ITEMS */}\r\n      <div>\r\n        {loading ? (\r\n          <h2 style={{ marginTop: \"3rem\" }}>Loading...</h2>\r\n        ) : list.length <= 0 ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"5rem\",\r\n            }}\r\n          >\r\n            <ErrorOutlineIcon fontSize=\"large\" style={{ marginRight: \"10px\" }} />\r\n            <h3>Have no any items in this status</h3>\r\n          </div>\r\n        ) : (\r\n          <Grid container spacing={2}>\r\n            {list.map((item) => (\r\n              <Grid item xs={12} sm={6} md={4} lg={3} key={item.dishId}>\r\n                <Card>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    height=\"140\"\r\n                    image={`data:image/jpeg;base64, ${item.image}`}\r\n                    alt={item.name}\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {item.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      Price:{\" \"}\r\n                      <b>\r\n                        {item.discount > 0 && (\r\n                          <>\r\n                            <del style={{ marginRight: \"0.5rem\" }}>{`$${item.originalPrice}`}</del>\r\n                          </>\r\n                        )}\r\n                        <span>{`$${(item.originalPrice * (1 - item.discount / 100)).toFixed(2)}`}</span>\r\n                      </b>\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        )}\r\n      </div>\r\n\r\n      {/* PAGINATION */}\r\n      {list.length > 0 && (\r\n        <PaginationBar\r\n          pagination={pagination}\r\n          handleRowsPerPageChange={handleRowsPerPageChange}\r\n          handlePageChange={handlePageChange}\r\n        />\r\n      )}\r\n\r\n      {/* ADD MORE */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailOrderTracking;\r\n"],"names":["_ref","handleChangeSelectedStatus","selectedStatusDefault","accessToken","useAuthToken","statuses","setStatuses","useState","selectedStatus","setSelectedStatus","useEffect","fetchTypes","async","response","axios","get","concat","apiUrl","headers","Authorization","data","error","status","alert","_jsx","Tabs","variant","scrollButtons","value","onChange","handleChangeStatus","event","encodeURIComponent","style","background","borderBottom","borderRadius","paddingTop","sx","color","width","height","backgroundColor","children","map","index","Tab","margin","label","replace","fontSize","useStyles","makeStyles","paginationContainer","marginTop","display","justifyContent","alignItems","dropdownRowPerPageLabel","marginRight","dropdownRowPerPage","pagination","handleRowsPerPageChange","handlePageChange","classes","_jsxs","className","FormControl","Select","labelId","id","rowsPerPage","MenuItem","Pagination","count","totalPages","page","shape","root","flexGrow","marginLeft","padding","filterContainer","position","top","left","zIndex","location","useLocation","userId","orderStatus","state","list","setList","loading","setLoading","setPagination","loadList","params","pageNumber","pageSize","result","console","log","content","totalItems","totalElements","Math","ceil","FilterStatus","length","ErrorOutlineIcon","Grid","container","spacing","item","xs","sm","md","lg","Card","CardMedia","component","image","alt","name","CardContent","Typography","gutterBottom","discount","_Fragment","originalPrice","toFixed","dishId","PaginationBar","child","target"],"sourceRoot":""}