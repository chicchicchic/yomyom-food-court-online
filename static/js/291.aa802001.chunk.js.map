{"version":3,"file":"static/js/291.aa802001.chunk.js","mappings":"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","sources":["pages/Basket/PopupDishDetail/index.tsx","pages/Basket/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {DialogContentText, Typography } from '@mui/material';\r\nimport { apiUrl } from '../../../variable/globalVariable';\r\n\r\n\r\ninterface PopupDishDetailProps {\r\n  onClose: () => void;\r\n  selectedDishId: number | null;\r\n}\r\n\r\ninterface Dish {\r\n    dishId: number;\r\n    name: string;\r\n    image: string;\r\n    originalPrice: number;\r\n    discount: number;\r\n    preparationTime: number;\r\n    mealSet: string;\r\n    categoryEnum: string;\r\n}\r\n\r\nconst PopupDishDetail: React.FC<PopupDishDetailProps> = ({ onClose, selectedDishId }) => {\r\n  const [dish, setDish] = useState<Dish | null>(null);\r\n\r\n\r\n  // [Handle] Fetching Dish Details\r\n  useEffect(() => {\r\n    if (selectedDishId !== null) {\r\n      fetchDishDetails();\r\n    }\r\n  }, [selectedDishId]);\r\n  const fetchDishDetails = async () => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/dish/${selectedDishId}`);\r\n      setDish(response.data);\r\n    } catch (error: any) {\r\n      console.error('Error fetching dish details:', error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <DialogContentText>\r\n      {dish && (\r\n        <>\r\n          <img\r\n            src={`data:image/jpeg;base64, ${dish.image}`}\r\n            alt={dish.name}\r\n            style={{ width: \"100%\", marginBottom: \"1rem\" }}\r\n          />\r\n\r\n          <Typography variant=\"body1\">\r\n            <b>Price:</b>{' '}\r\n            {dish.discount > 0 && (\r\n              <>\r\n                <del style={{ marginRight: \"0.5rem\" }}>{`$${dish.originalPrice}`}</del>\r\n              </>\r\n            )}\r\n            <span>{`$${(dish.originalPrice * (1 - dish.discount / 100)).toFixed(2)}`}</span>\r\n          </Typography>\r\n\r\n          {dish.discount > 0 && (\r\n            <Typography variant=\"body1\">\r\n              <b>Discount:</b> {`- ${dish.discount}%`}\r\n            </Typography>\r\n          )}\r\n\r\n          <Typography variant=\"body1\">\r\n            <b>Preparation Time:</b> {dish.preparationTime} minutes\r\n          </Typography>\r\n\r\n          <Typography variant=\"body1\">\r\n            <b>Meal Set:</b> {dish.mealSet}\r\n          </Typography>\r\n        </>\r\n      )}\r\n    </DialogContentText>\r\n  );\r\n};\r\n\r\nexport default PopupDishDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  IconButton,\r\n  Divider,\r\n  Grid,\r\n  Tooltip,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@mui/material\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport ProductionQuantityLimitsIcon from \"@mui/icons-material/ProductionQuantityLimits\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport axios from \"axios\";\r\nimport { getDecodeToken, useAuthToken } from \"../../utils/Auth/authUtils\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport PopupDishDetail from \"./PopupDishDetail\";\r\nimport { apiUrl } from \"../../variable/globalVariable\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  listBasketItem: {\r\n    display: \"block\",\r\n    margin: 0,\r\n    \"@media (min-width: 376px)\": {\r\n      display: \"inline\",\r\n    },\r\n  },\r\n  loadingIcon: {\r\n    animation: \"$spin 1s linear infinite\",\r\n  },\r\n  \"@keyframes spin\": {\r\n    \"0%\": {\r\n      transform: \"rotate(0deg)\",\r\n    },\r\n    \"100%\": {\r\n      transform: \"rotate(360deg)\",\r\n    },\r\n  },\r\n}));\r\n\r\ninterface Dish {\r\n  dishId: number;\r\n  name: string;\r\n  originalPrice: number;\r\n  discount: number;\r\n  image: string;\r\n  mealSet: string;\r\n  preparationTime: number;\r\n  categoryEnum: string;\r\n\r\n  createdAt: string;\r\n  createdBy: string;\r\n  updatedBy: string;\r\n  deleted: boolean;\r\n}\r\n\r\ninterface BasketItem {\r\n  dish: Dish;\r\n  quantity: number;\r\n}\r\n\r\nconst Basket: React.FC = () => {\r\n  const accessToken = useAuthToken();\r\n  const decodeToken = getDecodeToken();\r\n  let userEmail: string | null = null;\r\n  if (decodeToken) {\r\n    userEmail = decodeToken.sub;\r\n    // console.log(\"userDecoded\", decode);\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [list, setList] = useState<BasketItem[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [userId, setUserId] = useState<number | null>(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedDish, setSelectedDish] = useState<Dish | null>(null);\r\n  const navigate = useNavigate();\r\n\r\n  // [Handle] Fetch UserID From User's Email\r\n  // [Handle] Get Basket Item List\r\n  useEffect(() => {\r\n    if (userEmail !== null || userEmail === \"\") {\r\n      fetchDetailByEmail(userEmail);\r\n    }\r\n    if (userId !== null) {\r\n      loadList();\r\n    }\r\n  }, [userId]);\r\n  const fetchDetailByEmail = async (email: string) => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/user/find-by-email`, {\r\n        params: { email },\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      // console.log(\"User Details Basket:\", response.data);\r\n      if (response.data) {\r\n        console.log(\"IDDDDDDDDD la: \", response.data.userId);\r\n        setUserId(response.data.userId);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching User detail by email:\", error);\r\n    }\r\n  };\r\n  const loadList = async () => {\r\n    // Prevent concurrent API calls\r\n    if (loading) return;\r\n    setLoading(true); // Set loading state to true\r\n\r\n    try {\r\n      const result = await axios.get(`${apiUrl}/basket/basket-item-list/${userId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`, // Set the token in the headers\r\n        },\r\n      });\r\n      console.log(\"Basket List: \", result.data);\r\n      setList(result.data);\r\n    } catch (error: any) {\r\n      if (error.response && error.response.status === 404) {\r\n        // Handle 404 error here\r\n        setList([]);\r\n      } else {\r\n        // Handle other errors\r\n        alert(error);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // [Handle] Change Quantity\r\n  const handleIncrease = (dishId: number, currentQuantity: number) => {\r\n    const newQuantity = currentQuantity + 1;\r\n    updateQuantity(dishId, newQuantity);\r\n  };\r\n  const handleDecrease = (dishId: number, currentQuantity: number) => {\r\n    const newQuantity = currentQuantity - 1;\r\n    if (newQuantity <= 0) {\r\n      deleteItemFromBasket(dishId);\r\n    } else {\r\n      updateQuantity(dishId, newQuantity);\r\n    }\r\n  };\r\n  const updateQuantity = async (dishId: number, newQuantity: number) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${apiUrl}/basket/update-item-quantity/${dishId}`,\r\n        {\r\n          quantity: newQuantity,\r\n          userId: userId,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        }\r\n      );\r\n      // console.log(\"Updated Quantity:\", response.data);\r\n      setList(\r\n        list.map((item) =>\r\n          item.dish.dishId === dishId\r\n            ? { ...item, quantity: newQuantity }\r\n            : item\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error updating quantity:\", error);\r\n      alert(`Error updating quantity: ${(error as Error).message}`);\r\n    }\r\n  };\r\n\r\n  // [Handle] Remove Item From Basket\r\n  const deleteItemFromBasket = async (dishId: number) => {\r\n    try {\r\n      await axios.delete(`${apiUrl}/basket/remove-item/${dishId}`, {\r\n        params: { userId },\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      setList(list.filter((item) => item.dish.dishId !== dishId));\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error(\"Error deleting item from basket:\", error);\r\n      alert(`Error deleting item: ${(error as Error).message}`);\r\n    }\r\n  };\r\n\r\n  // [Handle] Open and close dialog\r\n  const handleOpenDialog = (dish: Dish) => {\r\n    setSelectedDish(dish);\r\n    setOpen(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setSelectedDish(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  // [Handle] Go To Place Order Page\r\n  const handleProceedToPlaceOrder = () => {\r\n    navigate('/place-order',\r\n      {\r\n        state: { list }\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {/* [BUTTON] Add More Button */}\r\n      <Link to=\"/\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <AddCircleIcon sx={{ color: \"green\", fontSize: \"3.5rem\" }} />\r\n      </Link>\r\n\r\n      {/* [LIST] Basket List */}\r\n      <Box>\r\n        {loading ? (\r\n          <CircularProgress\r\n            size={50}\r\n            sx={{ marginLeft: \"50%\", color: \"green\" }}\r\n          />\r\n        ) : list.length === 0 ? (\r\n          <Typography\r\n            variant=\"h5\"\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\"\r\n            }}>\r\n              <ProductionQuantityLimitsIcon\r\n                fontSize=\"large\"\r\n                sx={{ marginRight: \"1rem\" }}\r\n              />\r\n              The basket is empty !\r\n          </Typography>\r\n        ) : (\r\n          <div>\r\n            <List sx={{ mt: 2 }}>\r\n              {list.map((item) => (\r\n                <div key={item.dish.dishId}>\r\n                  <ListItem alignItems=\"flex-start\">\r\n                    <Grid container spacing={2} alignItems=\"center\">\r\n                      {/* Dish Detail */}\r\n                      <Grid item>\r\n                        <Avatar\r\n                          src={`data:image/jpeg;base64, ${item.dish.image}`}\r\n                          sx={{\r\n                            width: 100,\r\n                            height: 100,\r\n                            borderRadius: 1,\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={6} lg={6}>\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"h6\"\r\n                          color=\"textPrimary\"\r\n                          sx={{ fontWeight: \"bold\" }}\r\n                        >\r\n                          {item.dish.name}\r\n                        </Typography>\r\n\r\n                        <br />\r\n\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"h6\"\r\n                          color=\"textPrimary\"\r\n                          sx={{ marginRight: \"1rem\" }}\r\n                          className={classes.listBasketItem}\r\n                        >\r\n                          Price:{\" \"}\r\n                          <b>\r\n                            {item.dish.discount > 0 && (\r\n                              <>\r\n                                <del style={{ marginRight: \"0.5rem\" }}>\r\n                                  {`$${item.dish.originalPrice}`}\r\n                                </del>\r\n                              </>\r\n                            )}\r\n                            <span>\r\n                              {`$${(\r\n                                item.dish.originalPrice *\r\n                                (1 - item.dish.discount / 100)\r\n                              ).toFixed(2)}`}\r\n                            </span>\r\n                          </b>\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"h6\"\r\n                          color=\"textPrimary\"\r\n                          sx={{ marginRight: \"1rem\" }}\r\n                          className={classes.listBasketItem}\r\n                        >\r\n                          Quantity:{\" \"}\r\n                          <p\r\n                            style={{\r\n                              display: \"inline\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {item.quantity}\r\n                          </p>\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                          component=\"span\"\r\n                          variant=\"h5\"\r\n                          color=\"textPrimary\"\r\n                          className={classes.listBasketItem}\r\n                        >\r\n                          Total:{\" \"}\r\n                          <p\r\n                            style={{\r\n                              display: \"inline\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {`$${(\r\n                              item.dish.originalPrice *\r\n                              (1 - item.dish.discount / 100) *\r\n                              item.quantity\r\n                            ).toFixed(2)}`}\r\n                          </p>\r\n                        </Typography>\r\n\r\n                        <br />\r\n\r\n                        {/* Change Quantity Section */}\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <IconButton\r\n                            sx={{\r\n                              color: item.quantity <= 0 ? \"#e7e9eb\" : \"red\",\r\n                              paddingLeft: 0,\r\n                            }}\r\n                            disabled={item.quantity <= 0}\r\n                            onClick={() =>\r\n                              handleDecrease(item.dish.dishId, item.quantity)\r\n                            }\r\n                          >\r\n                            <RemoveCircleOutlineIcon fontSize=\"large\" />\r\n                          </IconButton>\r\n\r\n                          <Typography\r\n                            variant=\"h6\"\r\n                            sx={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            {item.quantity}\r\n                          </Typography>\r\n\r\n                          <IconButton\r\n                            sx={{ color: \"rgb(25, 118, 210)\" }}\r\n                            onClick={() =>\r\n                              handleIncrease(item.dish.dishId, item.quantity)\r\n                            }\r\n                          >\r\n                            <AddCircleIcon fontSize=\"large\" />\r\n                          </IconButton>\r\n                        </div>\r\n                      </Grid>\r\n\r\n                      {/* Actions Section */}\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        xs={12}\r\n                        sm={4}\r\n                        justifyContent=\"flex-end\"\r\n                        spacing={1}\r\n                      >\r\n                        <Grid item>\r\n                          <Tooltip title=\"Detail Item\" placement=\"top\">\r\n                            <IconButton\r\n                              edge=\"end\"\r\n                              aria-label=\"details\"\r\n                              onClick={() => handleOpenDialog(item.dish)}\r\n                            >\r\n                              <InfoIcon\r\n                                fontSize=\"large\"\r\n                                sx={{ color: \"#6e7783\" }}\r\n                              />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                          <Tooltip title=\"Remove Item\" placement=\"top\">\r\n                            <IconButton\r\n                              edge=\"end\"\r\n                              aria-label=\"delete\"\r\n                              onClick={() =>\r\n                                deleteItemFromBasket(item.dish.dishId)\r\n                              }\r\n                            >\r\n                              <CancelIcon\r\n                                fontSize=\"large\"\r\n                                sx={{ color: \"red\" }}\r\n                              />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </ListItem>\r\n                  <Divider component=\"li\" />\r\n                </div>\r\n              ))}\r\n            </List>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleProceedToPlaceOrder}\r\n              disabled={!list || list.length === 0} // Disable the button if list is empty\r\n            >\r\n              Proceed to Place Order\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Box>\r\n\r\n      {/* [POPUP] View Dish Detail */}\r\n      {selectedDish && (\r\n        <Dialog open={open} onClose={handleCloseDialog}>\r\n          <DialogTitle>{selectedDish.name}</DialogTitle>\r\n          <DialogContent>\r\n            <PopupDishDetail\r\n              onClose={handleCloseDialog}\r\n              selectedDishId={selectedDish.dishId}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={handleCloseDialog}\r\n                  color=\"primary\"\r\n                >\r\n                  Close\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogActions>\r\n        </Dialog>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Basket;\r\n"],"names":["_ref","onClose","selectedDishId","dish","setDish","useState","useEffect","fetchDishDetails","async","response","axios","get","concat","apiUrl","data","error","console","_jsx","DialogContentText","children","_jsxs","_Fragment","src","image","alt","name","style","width","marginBottom","Typography","variant","discount","marginRight","originalPrice","toFixed","preparationTime","mealSet","useStyles","makeStyles","listBasketItem","display","margin","loadingIcon","animation","transform","Basket","accessToken","useAuthToken","decodeToken","getDecodeToken","userEmail","sub","classes","list","setList","loading","setLoading","userId","setUserId","open","setOpen","selectedDish","setSelectedDish","navigate","useNavigate","fetchDetailByEmail","loadList","params","email","headers","Authorization","log","result","status","alert","updateQuantity","dishId","newQuantity","put","quantity","map","item","message","deleteItemFromBasket","delete","filter","window","location","reload","handleCloseDialog","Container","maxWidth","Link","to","justifyContent","AddCircleIcon","sx","color","fontSize","Box","CircularProgress","size","marginLeft","length","ProductionQuantityLimitsIcon","List","mt","ListItem","alignItems","Grid","container","spacing","Avatar","height","borderRadius","xs","lg","component","fontWeight","className","IconButton","paddingLeft","disabled","onClick","handleDecrease","currentQuantity","RemoveCircleOutlineIcon","handleIncrease","sm","Tooltip","title","placement","edge","handleOpenDialog","InfoIcon","CancelIcon","Divider","Button","handleProceedToPlaceOrder","state","Dialog","DialogTitle","DialogContent","PopupDishDetail","DialogActions"],"sourceRoot":""}