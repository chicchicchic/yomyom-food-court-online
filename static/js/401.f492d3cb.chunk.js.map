{"version":3,"file":"static/js/401.f492d3cb.chunk.js","mappings":"oXAYA,MAgEA,EAhEsDA,IAAuC,IAAtC,6BAAEC,GAA8BD,EACrF,MAAOE,EAAYC,IAAiBC,EAAAA,EAAAA,UAAmB,KAChDC,EAAkBC,IAAuBF,EAAAA,EAAAA,UAAiB,iBAGjEG,EAAAA,EAAAA,YAAU,KACRC,GAAiB,GAChB,IAEH,MAAMA,EAAkBC,UACtB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,GAADC,OAAIC,EAAAA,EAAM,wBAG1CX,EAAcO,EAASK,KACzB,CAAE,MAAOC,GACDA,EAAMN,UAAsC,MAA1BM,EAAMN,SAASO,OAEnCd,EAAc,IAIde,QAAQC,IAAI,UAAWH,EAE7B,GAQF,OACEI,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHC,QAAQ,aACRC,cAAc,OACd,aAAW,gBACXC,MAAOnB,EACPoB,SAXyBC,CAACC,EAA6BC,KACzDtB,EAAoBuB,mBAAmBD,IACvC3B,EAA6B4B,mBAAmBD,GAAU,EAUxDE,MAAO,CACJC,WAAY,UAAWC,aAAc,oBAAqBC,aAAc,MAAOC,WAAY,QAC9FC,GAAI,CACF,6BAA8B,CAC5BC,MAAO,WAET,gCAAiC,CAC/BC,MAAO,OACPC,OAAQ,QAEV,uBAAwB,CACtBC,gBAAiB,iBACjBF,MAAO,OACPC,OAAQ,MACRL,aAAc,SAEhBO,SAEDtC,EAAWuC,KAAI,CAACb,EAAUc,KACzBtB,EAAAA,EAAAA,KAACuB,EAAAA,EAAG,CAACR,GAAI,CAACS,OAAQ,QAAqBC,MAAOjB,EAASkB,QAAQ,KAAM,KAAMtB,MAAOI,EAAUE,MAAO,CAAEM,MAAO,UAAWW,SAAU,SAAjGL,MAE7B,E,2DCnDX,MAAMM,GAAYC,EAAAA,EAAAA,GAAW,CAC3BC,oBAAqB,CACnBC,UAAW,OACXC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdC,wBAAyB,CACvBC,YAAa,QAEfC,mBAAoB,CAClBD,YAAa,UAwCjB,EApCiDxD,IAI1C,IAJ2C,WAChD0D,EAAU,wBACVC,EAAuB,iBACvBC,GACD5D,EACC,MAAM6D,EAAUb,IAEhB,OACEc,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQX,oBAAoBV,SAAA,EAG1CpB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAW,CAACD,UAAWF,EAAQJ,mBAAmBjB,UACjDsB,EAAAA,EAAAA,MAACG,EAAAA,EAAM,CACLC,QAAQ,sBACRC,GAAG,gBACH3C,MAAOkC,EAAWU,YAClB3C,SAAUkC,EAAwBnB,SAAA,EAElCpB,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAAC7C,MAAO,EAAEgB,SAAC,OACpBpB,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAAC7C,MAAO,GAAGgB,SAAC,QACrBpB,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CAAC7C,MAAO,GAAGgB,SAAC,aAKzBpB,EAAAA,EAAAA,KAACkD,EAAAA,EAAU,CACTC,MAAOb,EAAWc,WAClBC,KAAMf,EAAWe,KACjBhD,SAAUmC,EACVtC,QAAQ,WACRoD,MAAM,cAEJ,E,iCC1DV,MAAM1B,GAAYC,EAAAA,EAAAA,GAAW,CAC3B0B,YAAa,CACXrC,OAAQ,QACRsC,UAAW,QACXvC,MAAO,OAEP,4BAA6B,CACzBC,OAAQ,YAKVuC,EAAuBA,IACpB,KA6CT,EA1CuDC,IACrD,MAAMjB,EAAUb,IAEV+B,EAAW,CACfC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,UAAU,EACVC,cAAe,IACfC,WAAWnE,EAAAA,EAAAA,KAACyD,EAAU,IACtBW,WAAWpE,EAAAA,EAAAA,KAACyD,EAAU,KAGlBY,EAAO,CACX,CAAEC,KAAM,KAAMC,MAAM,GAAD9E,OAAK+E,4BAAsB,6CAC9C,CAAEF,KAAM,KAAMC,MAAM,GAAD9E,OAAK+E,4BAAsB,6CAC9C,CAAEF,KAAM,KAAMC,MAAM,GAAD9E,OAAK+E,4BAAsB,6CAC9C,CAAEF,KAAM,KAAMC,MAAM,GAAD9E,OAAK+E,4BAAsB,6CAC9C,CAAEF,KAAM,KAAMC,MAAM,GAAD9E,OAAK+E,4BAAsB,8CAGhD,OACExE,EAAAA,EAAAA,KAAA,OAAMU,MAAO,CAAE+D,aAAc,QAASrD,UACpCpB,EAAAA,EAAAA,KAAC0E,EAAAA,EAAM,IAAKf,EAAQvC,SACjBiD,GAAQA,EAAKhD,KAAI,CAACsD,EAAMrD,KACvBtB,EAAAA,EAAAA,KAAA,OAAiB2C,UAAU,mBAAkBvB,UAC3CpB,EAAAA,EAAAA,KAAA,OACE4E,IAAKD,EAAKJ,MACVM,IAAKF,EAAKL,KACV3B,UAAS,GAAAlD,OAAKgD,EAAQc,gBAJhBjC,QAWV,E,eC1CV,MAyDA,EAzDwD1C,IAAkC,IAAjC,QAAEkG,EAAO,eAAEC,GAAgBnG,EAClF,MAAOoG,EAAMC,IAAWjG,EAAAA,EAAAA,UAAsB,OAI9CG,EAAAA,EAAAA,YAAU,KACe,OAAnB4F,GACFG,GACF,GACC,CAACH,IACJ,MAAMG,EAAmB7F,UACvB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,GAADC,OAAIC,EAAAA,EAAM,UAAAD,OAASsF,IACnDE,EAAQ3F,EAASK,KACnB,CAAE,MAAOC,GACPE,QAAQF,MAAM,+BAAgCA,EAChD,GAIF,OACEI,EAAAA,EAAAA,KAACmF,EAAAA,EAAiB,CAAA/D,SACf4D,IACCtC,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAAhE,SAAA,EACEpB,EAAAA,EAAAA,KAAA,OACE4E,IAAG,2BAAAnF,OAA6BuF,EAAKT,OACrCM,IAAKG,EAAKV,KACV5D,MAAO,CAAEO,MAAO,OAAQwD,aAAc,WAExC/B,EAAAA,EAAAA,MAAC2C,EAAAA,EAAU,CAACnF,QAAQ,QAAOkB,SAAA,EACzBpB,EAAAA,EAAAA,KAAA,KAAAoB,SAAG,WAAW,IACb4D,EAAKM,SAAW,IACftF,EAAAA,EAAAA,KAAAoF,EAAAA,SAAA,CAAAhE,UACEpB,EAAAA,EAAAA,KAAA,OAAKU,MAAO,CAAE0B,YAAa,UAAWhB,SAAA,IAAA3B,OAAMuF,EAAKO,oBAGrDvF,EAAAA,EAAAA,KAAA,QAAAoB,SAAA,IAAA3B,QAAYuF,EAAKO,eAAiB,EAAIP,EAAKM,SAAW,MAAME,QAAQ,SAGrER,EAAKM,SAAW,IACf5C,EAAAA,EAAAA,MAAC2C,EAAAA,EAAU,CAACnF,QAAQ,QAAOkB,SAAA,EACzBpB,EAAAA,EAAAA,KAAA,KAAAoB,SAAG,cAAa,IAAC,KAAA3B,OAAMuF,EAAKM,SAAQ,SAIxC5C,EAAAA,EAAAA,MAAC2C,EAAAA,EAAU,CAACnF,QAAQ,QAAOkB,SAAA,EACzBpB,EAAAA,EAAAA,KAAA,KAAAoB,SAAG,sBAAqB,IAAE4D,EAAKS,gBAAgB,eAEjD/C,EAAAA,EAAAA,MAAC2C,EAAAA,EAAU,CAACnF,QAAQ,QAAOkB,SAAA,EACzBpB,EAAAA,EAAAA,KAAA,KAAAoB,SAAG,cAAa,IAAE4D,EAAKU,eAIX,E,6CC1DxB,MA8GA,EA9GwD9G,IAMjD,IANkD,SACvD+G,EAAQ,eACRC,EAAc,eACdC,EAAc,kBACdC,EAAiB,UACjBC,GACDnH,EACC,MAAMoH,GAAeC,EAAAA,EAAAA,MAGrB,OACEvD,EAAAA,EAAAA,MAACwD,EAAAA,GAAI,CACHC,WAAS,EACTC,QAAS,EACTlE,WAAW,SACXD,eAAe,SAASb,SAAA,EAExBpB,EAAAA,EAAAA,KAACkG,EAAAA,GAAI,CAACvB,MAAI,EAAAvD,UACRpB,EAAAA,EAAAA,KAACqG,EAAAA,EAAU,CACTtF,GAAI,CAAEC,MAAO2E,GAAY,EAAI,UAAY,MAAOW,YAAa,GAC7DC,SAAUP,GAAgBL,GAAY,EACtCa,QAASX,EAAezE,UAExBpB,EAAAA,EAAAA,KAACyG,EAAAA,EAAuB,CAAC9E,SAAS,eAItC3B,EAAAA,EAAAA,KAACkG,EAAAA,GAAI,CAACvB,MAAI,EAAAvD,UACRpB,EAAAA,EAAAA,KAACqF,EAAAA,EAAU,CAACnF,QAAQ,KAAIkB,SAAEuE,OAG5B3F,EAAAA,EAAAA,KAACkG,EAAAA,GAAI,CAACvB,MAAI,EAAAvD,UACRpB,EAAAA,EAAAA,KAACqG,EAAAA,EAAU,CACTtF,GAAI,CAAEC,MAAO,qBACbuF,SAAUP,EACVQ,QAASZ,EAAexE,UAExBpB,EAAAA,EAAAA,KAAC0G,EAAAA,EAAa,CAAC/E,SAAS,eAI5Be,EAAAA,EAAAA,MAACwD,EAAAA,GAAI,CAACvB,MAAI,EAAAvD,SAAA,EACRpB,EAAAA,EAAAA,KAAC2G,EAAAA,EAAM,CACLzG,QAAQ,YACRa,GAAI,CACFI,gBAAiB,UACjByF,QAAS,cACTC,SAAU,SACV,4BAA6B,CAC3BD,QAAS,gBAGbL,SAAUZ,GAAY,EACtBa,QAASV,EAAkB1E,UAE3BsB,EAAAA,EAAAA,MAAC2C,EAAAA,EAAU,CACTnF,QAAQ,QACR4G,UAAU,OACVpG,MAAO,CACL0B,YAAa,OACb2E,WAAY,UACZ3F,SAAA,CACH,mBACkB2E,EAAUP,QAAQ,SAIpCQ,GAAgBL,GAAY,IAC7B3F,EAAAA,EAAAA,KAAA,OACEU,MAAO,CACLsB,QAAS,OACTC,eAAgB,UAChBb,UAEFsB,EAAAA,EAAAA,MAAA,KACEhC,MAAO,CACLsB,QAAS,OACTE,WAAY,SACZlB,MAAO,OACPI,SAAA,EACFpB,EAAAA,EAAAA,KAACgH,EAAAA,EAAS,CAACtG,MAAO,CAAE0B,YAAa,SAAW,gCAMhD4D,IACAhG,EAAAA,EAAAA,KAAA,OACEU,MAAO,CACLsB,QAAS,OACTC,eAAgB,UAChBb,UAEFsB,EAAAA,EAAAA,MAAA,KACEhC,MAAO,CACLsB,QAAS,OACTE,WAAY,SACZlB,MAAO,OACPI,SAAA,EACFpB,EAAAA,EAAAA,KAACgH,EAAAA,EAAS,CAACtG,MAAO,CAAE0B,YAAa,SAAW,8CAO/C,E,eC9FX,MAAMR,GAAYC,EAAAA,EAAAA,GAAW,CAC3BoF,KAAM,CACJC,SAAU,EACVC,WAAY,OACZ,4BAA6B,CAC3BP,QAAS,SAGbQ,KAAM,CACJnG,MAAO,OACPoG,OAAQ,UACRC,WAAY,sBACZ,UAAW,CACTC,UAAW,gBAGfC,MAAO,CACLtG,OAAQ,KAEVuG,aAAc,CACZC,SAAU,YAEZC,YAAa,CACXD,SAAU,WACVE,IAAK,MACLC,KAAM,MACN1G,gBAAiB,UACjBH,MAAO,QACP4F,QAAS,WACT/F,aAAc,MACdiH,OAAQ,GAEVC,gBAAiB,CACfL,SAAU,QACVE,IAAK,SACLC,KAAM,EACN5G,MAAO,OACP6G,OAAQ,IAERhH,WAAY,OA4dhB,EAxc2BkH,KACzB,MAAMvF,EAAUb,IACVqG,GAAcC,EAAAA,EAAAA,MACdC,GAAcC,EAAAA,EAAAA,MACpB,IAAIC,EAA2B,KAC3BF,IACFE,EAAYF,EAAYG,KAK1B,MAAOjE,EAAMkE,IAAWvJ,EAAAA,EAAAA,UAAiB,KAElCwJ,EAAUC,IAAezJ,EAAAA,EAAAA,UAAiB,KAE1C0J,EAASC,IAAc3J,EAAAA,EAAAA,WAAS,IAChCsD,EAAYsG,IAAiB5J,EAAAA,EAAAA,UAAS,CAC3CqE,KAAM,EACNL,YAAa,EACbI,WAAY,KAEPnE,EAAkBC,IAAuBF,EAAAA,EAAAA,UAAS,iBACnD,KAAEqE,EAAI,YAAEL,GAAgBV,GAGvBuG,EAAMC,IAAW9J,EAAAA,EAAAA,WAAS,IAC1B+J,EAAcC,IAAmBhK,EAAAA,EAAAA,UAAsB,OAEvD2G,EAAUsD,IAAejK,EAAAA,EAAAA,UAAS,IAClCkK,EAAQC,IAAanK,EAAAA,EAAAA,UAAwB,OAG7CoK,EAAwBC,GAC7BC,EAAAA,UAAe,IAEVC,EAAaC,IAAkBxK,EAAAA,EAAAA,UAAS,kBACxCyK,GAAYC,KAAiB1K,EAAAA,EAAAA,UAAiB,KAMrDG,EAAAA,EAAAA,YAAU,KACRwK,KACkB,OAAdtB,GAAoC,KAAdA,GACxBuB,GAAiBvB,EACnB,GACC,CAAChF,EAAML,EAAa/D,EAAkBoJ,IACzC,MAAMsB,GAAWtK,UAEf,IAAIqJ,EAAJ,CACAC,GAAW,GAEX,IACE,MAAMkB,QAAetK,EAAAA,EAAMC,IAAI,GAADC,OACzBC,EAAAA,EAAM,0CAAAD,OAAyCR,EAAgB,gBAAAQ,OAChE6C,EAAWe,KAAO,EAAC,cAAA5D,OACR6C,EAAWU,cAG1BuF,EAAQsB,EAAOlK,KAAKmK,SAGpBrB,EAAYoB,EAAOlK,KAAKmK,SAGxB,MAAMC,EAAaF,EAAOlK,KAAKqK,cAEzB5G,EAAa6G,KAAKC,KAAKH,EAAazH,EAAWU,aACrD4F,EAAc,IACTtG,EACHc,WAAYA,GAOhB,CAAE,MAAOxD,GACHA,EAAMN,UAAsC,MAA1BM,EAAMN,SAASO,OAEnC0I,EAAQ,IAGR4B,MAAMvK,EAEV,CAAC,QACC+I,GAAW,EACb,CAtCmB,CAsCnB,EAEIiB,GAAmBvK,UACvB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,GAADC,OAAIC,EAAAA,EAAM,uBAAuB,CAC/D0K,OAAQ,CAAEC,SACVC,QAAS,CACPC,cAAc,UAAD9K,OAAYwI,MAIzB3I,EAASK,MAEXwJ,EAAU7J,EAASK,KAAKuJ,OAE5B,CAAE,MAAOtJ,GACPE,QAAQF,MAAM,uCAAwCA,EACxD,GAwCI4K,GAAoBA,KACxBxB,EAAgB,MAChBC,EAAY,GACZH,GAAQ,EAAM,EAOV2B,GAAgCA,CACpClK,EACAmK,KAEe,cAAXA,GAGJrB,GAA0B,EAAM,EAE5BsB,IACJ3K,EAAAA,EAAAA,KAACsJ,EAAAA,SAAc,CAAAlI,UACbpB,EAAAA,EAAAA,KAACqG,EAAAA,EAAU,CACTuE,KAAK,QACL,aAAW,QACX5J,MAAM,UACNwF,QAASiE,GAA8BrJ,UAEvCpB,EAAAA,EAAAA,KAAC6K,EAAAA,EAAS,CAAClJ,SAAS,cA6F1B,OACEe,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQwE,KAAK7F,SAAA,EAE3BpB,EAAAA,EAAAA,KAAA,OAAK2C,UAAWF,EAAQsF,gBAAgB3G,UACtCpB,EAAAA,EAAAA,KAAC8K,EAAc,CACbjM,6BAjK8B2B,IACpCoI,EAAc,IACTtG,EACHe,KAAM,IAERnE,EAAoBsB,EAAS,OAiK3BR,EAAAA,EAAAA,KAAC+K,EAAc,KAGf/K,EAAAA,EAAAA,KAACkG,EAAAA,GAAI,CAACC,WAAS,EAAClE,eAAe,SAAQb,UACrCpB,EAAAA,EAAAA,KAACkG,EAAAA,GAAI,CAACvB,MAAI,EAACqG,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG/J,UACxCpB,EAAAA,EAAAA,KAACoL,EAAAA,EAAS,CACR3J,MAAO8H,EACPrJ,QAAQ,WACRmL,WAAS,EACT7J,OAAO,SACPpB,MAAOqJ,GAEPpJ,SAvDYE,IACpB,MAAMkJ,EAAalJ,EAAM+K,OAAOlL,MAChCsJ,GAAcD,GAGd,MAAM8B,EAAmBC,GAChBA,EACJC,UAAU,OACV/J,QAAQ,mBAAoB,IAC5BgK,cAGCC,EAAuBJ,EAAgB9B,GAEhB,KAAzBkC,GACFhC,KAGF,MAAMiC,EAAiBpD,EAASqD,QAAQlH,GAC/B4G,EAAgB5G,EAAKL,MAAMwH,SAASH,KAE7CpD,EAAQqD,GAGR,MAAM7B,EAAa6B,EAAeG,OAC5B3I,EAAa6G,KAAKC,KAAKH,EAAazH,EAAWU,aACrD4F,EAAc,IACTtG,EACHc,WAAYA,GACZ,EA2BM4I,QAASA,IAAMxC,EAAe,UAC9ByC,OAAQA,IAAMzC,EAAe,wBAMnCxJ,EAAAA,EAAAA,KAAA,OAAAoB,SAGGsH,GACC1I,EAAAA,EAAAA,KAAA,MAAIU,MAAO,CAAEqB,UAAW,QAASX,SAAC,eAChCiD,EAAK0H,QAAU,GACjBrJ,EAAAA,EAAAA,MAAA,OACEhC,MAAO,CACLsB,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBF,UAAW,QACXX,SAAA,EAEFpB,EAAAA,EAAAA,KAACkM,EAAAA,EAAgB,CACfvK,SAAS,QACTjB,MAAO,CAAE0B,YAAa,WAExBpC,EAAAA,EAAAA,KAAA,MAAAoB,SAAI,4CAGNpB,EAAAA,EAAAA,KAACkG,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGrF,GAAI,CAAEgB,UAAW,UAAWX,SACrDiD,EAAKhD,KAAKsD,IAET3E,EAAAA,EAAAA,KAACkG,EAAAA,GAAI,CAACvB,MAAI,EAACqG,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE/J,UACrCsB,EAAAA,EAAAA,MAACyJ,EAAAA,EAAI,CACHxJ,UAAWF,EAAQ2E,KACnBZ,QAASA,KArLvBwC,EAqL8CrE,GApL9CsE,EAAY,QACZH,GAAQ,IAmL6C1H,SAAA,EAEvCsB,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQgF,aAAarG,SAAA,CAClCuD,EAAKW,SAAW,IACftF,EAAAA,EAAAA,KAAA,OAAK2C,UAAWF,EAAQkF,YAAYvG,SAAA,IAAA3B,OAC7BkF,EAAKW,SAAQ,QAItBtF,EAAAA,EAAAA,KAACoM,EAAAA,EAAS,CACRzJ,UAAWF,EAAQ+E,MACnBjD,MAAK,2BAAA9E,OAA6BkF,EAAKJ,OACvC8H,MAAO1H,EAAKL,WAIhB5B,EAAAA,EAAAA,MAAC4J,EAAAA,EAAW,CAAAlL,SAAA,EACVpB,EAAAA,EAAAA,KAACqF,EAAAA,EAAU,CAACkH,cAAY,EAACrM,QAAQ,KAAK4G,UAAU,KAAI1F,SACjDuD,EAAKL,QAGR5B,EAAAA,EAAAA,MAAC2C,EAAAA,EAAU,CACTnF,QAAQ,QACRc,MAAM,gBACN8F,UAAU,IAAG1F,SAAA,CACd,SACQ,KACPsB,EAAAA,EAAAA,MAAA,KAAAtB,SAAA,CACGuD,EAAKW,SAAW,IACftF,EAAAA,EAAAA,KAAAoF,EAAAA,SAAA,CAAAhE,UACEpB,EAAAA,EAAAA,KAAA,OAAKU,MAAO,CAAE0B,YAAa,UAAWhB,SAAA,IAAA3B,OAC/BkF,EAAKY,oBAIhBvF,EAAAA,EAAAA,KAAA,QAAAoB,SAAA,IAAA3B,QAEIkF,EAAKY,eACJ,EAAIZ,EAAKW,SAAW,MACrBE,QAAQ,mBA1CuBb,EAAK6H,cAuDzDnI,EAAK0H,OAAS,IACb/L,EAAAA,EAAAA,KAACyM,EAAa,CACZnK,WAAYA,EACZC,wBA1PwBA,CAC9BhC,EACAmM,KAEA9D,EAAc,IACTtG,EACHe,KAAM,EACNL,YAAazC,EAAM+K,OAAOlL,QAE5BsJ,GAAc,GAAG,EAkPXlH,iBApQiBA,CACvBjC,EACAH,KAEAwI,EAAc,IACTtG,EACHe,KAAMjD,GACN,IAkQC2I,IACCrG,EAAAA,EAAAA,MAACiK,EAAAA,EAAM,CAAC9D,KAAMA,EAAM/D,QAAS0F,GAAkBpJ,SAAA,EAC7CpB,EAAAA,EAAAA,KAAC4M,EAAAA,EAAW,CAAAxL,SAAE2H,EAAazE,QAC3BtE,EAAAA,EAAAA,KAAC6M,EAAAA,EAAa,CAAAzL,UACZpB,EAAAA,EAAAA,KAAC8M,EAAe,CACdhI,QAAS0F,GACTzF,eAAgBgE,EAAayD,YAGjCxM,EAAAA,EAAAA,KAAC+M,EAAAA,EAAa,CAAA3L,UACZsB,EAAAA,EAAAA,MAACwD,EAAAA,GAAI,CACHC,WAAS,EACTC,QAAS,EACTlE,WAAW,SACXD,eAAe,SAAQb,SAAA,EAEvBpB,EAAAA,EAAAA,KAAA,MACEU,MAAO,CACLO,MAAO,OACPC,OAAQ,MACRC,gBAAiB,UACjB6L,OAAQ,WAIZhN,EAAAA,EAAAA,KAACkG,EAAAA,GAAI,CAACvB,MAAI,EAAAvD,UACRpB,EAAAA,EAAAA,KAACiN,EAAe,CACdtH,SAAUA,EACVC,eAzOOA,IAAMqD,EAAYtD,EAAW,GA0OpCE,eAzOOA,KACjBF,EAAW,GACbsD,EAAYtD,EAAW,EACzB,EAuOcG,kBAnOUzG,UAGxBkB,EAAM2M,iBAEN,IACE,IAAKnE,EACH,MAAM,IAAIoE,MAAM,oBAGlB,IAAKjE,EACH,MAAM,IAAIiE,MAAM,qBAGlB,MAAMC,EAAgB,CACpBZ,OAAQzD,EAAayD,OACrB7G,SAAUA,EACV0H,UAAWhF,EACXiF,UAAWjF,GAGPkF,EAAY,CAChBrE,OAAQA,EACRmE,UAAWhF,EACXiF,UAAWjF,EACXmF,eAAgB,CAACJ,UAGb7N,EAAAA,EAAMkO,KAAK,GAADhO,OAAIC,EAAAA,EAAM,oBAAoB6N,EAAW,CACvDjD,QAAS,CACPC,cAAc,UAAD9K,OAAYwI,GACzB,eAAgB,sBAKpBuC,KACAkD,OAAOC,SAASC,SAtElBvE,GAA0B,EAwE1B,CAAE,MAAOzJ,GACPE,QAAQF,MAAM,+BAAgCA,GAC9CuK,MAAM,wDACR,GA0LcpE,UACEgD,EAAaxD,eACZ,EAAIwD,EAAazD,SAAW,KAC7BK,OAKN3F,EAAAA,EAAAA,KAACkG,EAAAA,GAAI,CAACvB,MAAI,EAAAvD,UACRpB,EAAAA,EAAAA,KAAC2G,EAAAA,EAAM,CACLzG,QAAQ,WACRsG,QAASgE,GACTxJ,MAAM,UAASI,SAChB,qBAUXpB,EAAAA,EAAAA,KAAC6N,EAAAA,EAAQ,CACPhF,KAAMO,EACN0E,iBAAkB,IAClBhJ,QAAS2F,GACTsD,QAAQ,8CACRpD,OAAQA,GACR5J,GAAI,CACF,6BAA8B,CAC5BI,gBAAiB,QACjBH,MAAO,cAMT,C","sources":["pages/HomePage/FilterCategory/index.tsx","pages/HomePage/Pagination/index.tsx","pages/HomePage/EventsSliceBar/index.tsx","pages/HomePage/PopupDishDetail/index.tsx","pages/HomePage/PopupDishDetail/AddToBasketForm/index.tsx","pages/HomePage/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Tabs, Tab } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useAuthToken } from \"../../../utils/Auth/authUtils\";\r\nimport { apiUrl } from \"../../../variable/globalVariable\";\r\n\r\n\r\ninterface FilterCategoryProps {\r\n  handleChangeSelectedCategory: (category: string) => void;\r\n}\r\n\r\n\r\nconst FilterCategory: React.FC<FilterCategoryProps> = ({ handleChangeSelectedCategory }) => {\r\n  const [categories, setCategories] = useState<string[]>([]);\r\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"MAIN_COURSES\");\r\n\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/dish/category-list`);\r\n\r\n      // console.log(response.data)\r\n      setCategories(response.data);\r\n    } catch (error: any) {\r\n        if (error.response && error.response.status === 404) {\r\n          // Handle 404 error here\r\n          setCategories([]);\r\n        } else {\r\n          // Handle other errors\r\n          // alert(error);\r\n          console.log(\"error: \", error)\r\n        }\r\n    }\r\n  }\r\n\r\n  const handleChangeCategory = (event: React.SyntheticEvent, category: string) => {\r\n    setSelectedCategory(encodeURIComponent(category));\r\n    handleChangeSelectedCategory(encodeURIComponent(category)); // Pass the selected category to the parent component\r\n  };\r\n\r\n  return (\r\n    <Tabs\r\n      variant=\"scrollable\"\r\n      scrollButtons=\"auto\"\r\n      aria-label=\"category tabs\"\r\n      value={selectedCategory}\r\n      onChange={handleChangeCategory}\r\n      style={{\r\n         background: \"#ffffff\", borderBottom: \"1px solid #b2b2b2\", borderRadius: \"4px\", paddingTop: \"3rem\" }}\r\n      sx={{\r\n        \"& .MuiTabScrollButton-root\": {\r\n          color: \"#000000\",\r\n        },\r\n        \"& .css-ptiqhd-MuiSvgIcon-root\": { // Use this selector for the SVG icon within scroll buttons\r\n          width: \"2rem\", // Adjust the width of the SVG icon\r\n          height: \"2rem\", // Adjust the height of the SVG icon\r\n        },\r\n        '& .MuiTabs-indicator': {\r\n          backgroundColor: 'rgb(124, 3, 3)', // Change the background color\r\n          width: '50px',\r\n          height: '3px',\r\n          borderRadius: \"10px\" // Adjust the width of the indicator\r\n        },\r\n      }}\r\n    >\r\n      {categories.map((category, index) => (\r\n        <Tab sx={{margin: \"auto\"}} key={index} label={category.replace(/_/g, ' ')} value={category} style={{ color: \"#000000\", fontSize: \"14px\" }} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n}\r\n\r\nexport default FilterCategory;\r\n","import React from \"react\";\r\nimport {\r\n  Pagination,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  SelectChangeEvent,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\ninterface PaginationProps {\r\n    pagination: {\r\n      rowsPerPage: number;\r\n      totalPages: number;\r\n      page: number;\r\n    };\r\n    handleRowsPerPageChange: (event: SelectChangeEvent<number>, child: React.ReactNode) => void;\r\n    handlePageChange: (event: React.ChangeEvent<unknown>, value: number) => void;\r\n  }\r\n\r\nconst useStyles = makeStyles({\r\n  paginationContainer: {\r\n    marginTop: \"2rem\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  dropdownRowPerPageLabel: {\r\n    marginRight: \"1rem\",\r\n  },\r\n  dropdownRowPerPage: {\r\n    marginRight: \"3rem\",\r\n  },\r\n});\r\n\r\nconst PaginationBar: React.FC<PaginationProps> = ({\r\n  pagination,\r\n  handleRowsPerPageChange,\r\n  handlePageChange,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.paginationContainer}>\r\n      {/* Dropdown menu for rows per page */}\r\n\r\n      <FormControl className={classes.dropdownRowPerPage}>\r\n        <Select\r\n          labelId=\"rows-per-page-label\"\r\n          id=\"rows-per-page\"\r\n          value={pagination.rowsPerPage}\r\n          onChange={handleRowsPerPageChange}\r\n        >\r\n          <MenuItem value={8}>8</MenuItem>\r\n          <MenuItem value={16}>16</MenuItem>\r\n          <MenuItem value={24}>24</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      {/* Pagination */}\r\n      <Pagination\r\n        count={pagination.totalPages} // Total number of pages\r\n        page={pagination.page} // Current page\r\n        onChange={handlePageChange} // Event handler for page change\r\n        variant=\"outlined\"\r\n        shape=\"rounded\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginationBar;\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\"; // Import slick carousel styles\r\nimport \"slick-carousel/slick/slick-theme.css\"; // Import theme for slick carousel\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\ninterface EventsSliceBarProps {\r\n  // Add any props you might need for the component here\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  sliderImage: {\r\n    height: \"200px\",\r\n    maxHeight: \"300px\",\r\n    width: \"100%\",\r\n    // objectFit: \"cover\",\r\n    \"@media (min-width: 376px)\": {\r\n        height: \"300px\",\r\n    },\r\n  },\r\n});\r\n\r\nconst EmptyArrow: React.FC = () => {\r\n  return null;\r\n};\r\n\r\nconst EventsSliceBar: React.FC<EventsSliceBarProps> = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 1000,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n    nextArrow: <EmptyArrow />,  // Use empty component here\r\n    prevArrow: <EmptyArrow />,  // Use empty component here\r\n  };\r\n\r\n  const list = [\r\n    { name: \"e1\", image: `${process.env.PUBLIC_URL}/images/HomePage/IntroEventImages/e1.jpg` },\r\n    { name: \"e2\", image: `${process.env.PUBLIC_URL}/images/HomePage/IntroEventImages/e2.png` },\r\n    { name: \"e3\", image: `${process.env.PUBLIC_URL}/images/HomePage/IntroEventImages/e3.jpg` },\r\n    { name: \"e4\", image: `${process.env.PUBLIC_URL}/images/HomePage/IntroEventImages/e4.jpg` },\r\n    { name: \"e5\", image: `${process.env.PUBLIC_URL}/images/HomePage/IntroEventImages/e5.jpg` },\r\n  ];\r\n\r\n  return (\r\n    <div  style={{ marginBottom: \"1rem\" }}>\r\n      <Slider {...settings}>\r\n        {list && list.map((item, index) => (\r\n          <div key={index} className=\"card card-slider\">\r\n            <img\r\n              src={item.image}\r\n              alt={item.name}\r\n              className={`${classes.sliderImage}`}\r\n            />\r\n          </div>\r\n        ))}\r\n\r\n\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsSliceBar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {DialogContentText, Typography } from '@mui/material';\r\nimport { apiUrl } from '../../../variable/globalVariable';\r\n\r\n\r\ninterface PopupDishDetailProps {\r\n  onClose: () => void;\r\n  selectedDishId: number | null;\r\n}\r\n\r\ninterface Dish {\r\n    dishId: number;\r\n    name: string;\r\n    image: string;\r\n    originalPrice: number;\r\n    discount: number;\r\n    preparationTime: number;\r\n    mealSet: string;\r\n    categoryEnum: string;\r\n  }\r\n\r\nconst PopupDishDetail: React.FC<PopupDishDetailProps> = ({ onClose, selectedDishId }) => {\r\n  const [dish, setDish] = useState<Dish | null>(null);\r\n\r\n\r\n  // [Handle] Fetching Dish Details\r\n  useEffect(() => {\r\n    if (selectedDishId !== null) {\r\n      fetchDishDetails();\r\n    }\r\n  }, [selectedDishId]);\r\n  const fetchDishDetails = async () => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/dish/${selectedDishId}`);\r\n      setDish(response.data);\r\n    } catch (error: any) {\r\n      console.error('Error fetching dish details:', error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <DialogContentText>\r\n      {dish && (\r\n        <>\r\n          <img\r\n            src={`data:image/jpeg;base64, ${dish.image}`}\r\n            alt={dish.name}\r\n            style={{ width: \"100%\", marginBottom: \"1rem\" }}\r\n          />\r\n          <Typography variant=\"body1\">\r\n            <b>Price:</b>{' '}\r\n            {dish.discount > 0 && (\r\n              <>\r\n                <del style={{ marginRight: \"0.5rem\" }}>{`$${dish.originalPrice}`}</del>\r\n              </>\r\n            )}\r\n            <span>{`$${(dish.originalPrice * (1 - dish.discount / 100)).toFixed(2)}`}</span>\r\n          </Typography>\r\n\r\n          {dish.discount > 0 && (\r\n            <Typography variant=\"body1\">\r\n              <b>Discount:</b> {`- ${dish.discount}%`}\r\n            </Typography>\r\n          )}\r\n\r\n          <Typography variant=\"body1\">\r\n            <b>Preparation Time:</b> {dish.preparationTime} minutes\r\n          </Typography>\r\n          <Typography variant=\"body1\">\r\n            <b>Meal Set:</b> {dish.mealSet}\r\n          </Typography>\r\n        </>\r\n      )}\r\n    </DialogContentText>\r\n  );\r\n};\r\n\r\nexport default PopupDishDetail;\r\n","import React from \"react\";\r\nimport { Button, Grid, IconButton, Typography } from \"@mui/material\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\nimport ErrorIcon from \"@mui/icons-material/Error\";\r\nimport { checkTokenIsExpired, useAuthToken } from \"../../../../utils/Auth/authUtils\";\r\n\r\ninterface AddToBasketFormProps {\r\n  quantity: number;\r\n  handleIncrease: () => void;\r\n  handleDecrease: () => void;\r\n  handleAddToBasket: (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => void;\r\n  dishPrice: number;\r\n}\r\n\r\nconst AddToBasketForm: React.FC<AddToBasketFormProps> = ({\r\n  quantity,\r\n  handleIncrease,\r\n  handleDecrease,\r\n  handleAddToBasket,\r\n  dishPrice,\r\n}) => {\r\n  const expiredToken = checkTokenIsExpired();\r\n  // console.log(\"expiredToken: \", expiredToken)\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      alignItems=\"center\" // To center the content vertically\r\n      justifyContent=\"center\" // To center the content horizontally\r\n    >\r\n      <Grid item>\r\n        <IconButton\r\n          sx={{ color: quantity <= 0 ? \"#e7e9eb\" : \"red\", paddingLeft: 0 }}\r\n          disabled={expiredToken && quantity <= 0}\r\n          onClick={handleDecrease}\r\n        >\r\n          <RemoveCircleOutlineIcon fontSize=\"large\" />\r\n        </IconButton>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <Typography variant=\"h6\">{quantity}</Typography>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <IconButton\r\n          sx={{ color: \"rgb(25, 118, 210)\" }}\r\n          disabled={expiredToken}\r\n          onClick={handleIncrease}\r\n        >\r\n          <AddCircleIcon fontSize=\"large\" />\r\n        </IconButton>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{\r\n            backgroundColor: \"#00b14f\",\r\n            padding: \"0.5rem 2rem\", // Adjust padding as needed\r\n            overflow: \"hidden\", // Hide overflow content if it exceeds the width\r\n            \"@media (min-width: 376px)\": {\r\n              padding: \"0.5rem 5rem\",\r\n            },\r\n          }}\r\n          disabled={quantity <= 0}\r\n          onClick={handleAddToBasket}\r\n        >\r\n          <Typography\r\n            variant=\"body1\"\r\n            component=\"span\"\r\n            style={{\r\n              marginRight: \"1rem\",\r\n              whiteSpace: \"nowrap\", // Prevent content from wrapping on mobile screens\r\n            }}\r\n          >\r\n            Add to Basket: ${dishPrice.toFixed(2)}\r\n          </Typography>\r\n        </Button>\r\n\r\n        {(!expiredToken && quantity <= 0) && (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                color: \"red\"\r\n              }}>\r\n              <ErrorIcon style={{ marginRight: \"8px\" }} />\r\n              You must choose quantity\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {(expiredToken) && (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                color: \"red\"\r\n              }}>\r\n              <ErrorIcon style={{ marginRight: \"8px\" }} />\r\n              You must login to use this action\r\n            </p>\r\n          </div>\r\n        )\r\n      }\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AddToBasketForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  SelectChangeEvent,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  IconButton,\r\n  Snackbar,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport FilterCategory from \"./FilterCategory\";\r\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\r\nimport PaginationBar from \"./Pagination\";\r\nimport EventsSliceBar from \"./EventsSliceBar\";\r\nimport PopupDishDetail from \"./PopupDishDetail\";\r\nimport AddToBasketForm from \"./PopupDishDetail/AddToBasketForm\";\r\nimport { getDecodeToken, useAuthToken } from \"../../utils/Auth/authUtils\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { apiUrl } from \"../../variable/globalVariable\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: \"auto\",\r\n    \"@media (min-width: 376px)\": {\r\n      padding: \"1rem\",\r\n    },\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n    transition: \"transform 0.3s ease\", // Add transition for smooth effect\r\n    \"&:hover\": {\r\n      transform: \"scale(1.05)\", // Scale up when hovered\r\n    },\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  mediaWrapper: {\r\n    position: \"relative\", // Ensure proper positioning of the CardMedia and the discount tag\r\n  },\r\n  discountTag: {\r\n    position: \"absolute\",\r\n    top: \"4px\",\r\n    left: \"4px\",\r\n    backgroundColor: \"#00b14f\",\r\n    color: \"white\",\r\n    padding: \"5px 10px\",\r\n    borderRadius: \"5px\",\r\n    zIndex: 1, // Ensure the tag is above the image\r\n  },\r\n  filterContainer: {\r\n    position: \"fixed\",\r\n    top: \"9.5rem\",\r\n    left: 0,\r\n    width: \"100%\",\r\n    zIndex: 999,\r\n    // backgroundColor: \"#ffffff\",\r\n    paddingTop: \"0\",\r\n  },\r\n});\r\n\r\ninterface Dish {\r\n  dishId: number;\r\n  name: string;\r\n  categoryEnum: string;\r\n  discount: number;\r\n  mealSet: string;\r\n  image: string;\r\n  originalPrice: number;\r\n  preparationTime: number;\r\n\r\n  createdAt: string;\r\n  createdBy: string;\r\n  updatedBy: string;\r\n  deleted: boolean;\r\n}\r\n\r\nconst HomePage: React.FC = () => {\r\n  const classes = useStyles();\r\n  const accessToken = useAuthToken();\r\n  const decodeToken = getDecodeToken();\r\n  let userEmail: string | null = null;\r\n  if (decodeToken) {\r\n    userEmail = decodeToken.sub;\r\n    // console.log(\"userEmail\", userEmail);\r\n  }\r\n\r\n\r\n  const [list, setList] = useState<Dish[]>([]);\r\n\r\n  const [fullList, setFullList] = useState<Dish[]>([]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    rowsPerPage: 8,\r\n    totalPages: 1,\r\n  });\r\n  const [selectedCategory, setSelectedCategory] = useState(\"MAIN_COURSES\");\r\n  const { page, rowsPerPage } = pagination;\r\n\r\n  // Dialog state\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedDish, setSelectedDish] = useState<Dish | null>(null);\r\n\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [userId, setUserId] = useState<number | null>(null);\r\n\r\n  // Adding Successfully Snackbar\r\n  const [openAddSuccessSnackBar, setOpenAddSuccessSnackBar] =\r\n    React.useState(false);\r\n\r\n  const [searchLabel, setSearchLabel] = useState(\"Search (name)\");\r\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\r\n\r\n  // // Reference to the List Dishes section element\r\n  // const listDishesRef = React.createRef<HTMLDivElement>();\r\n\r\n  // [Handle] Fetching Dish List\r\n  useEffect(() => {\r\n    loadList();\r\n    if (userEmail !== null || userEmail === \"\") {\r\n      getUserIdByEmail(userEmail);\r\n    }\r\n  }, [page, rowsPerPage, selectedCategory, userEmail]);\r\n  const loadList = async () => {\r\n    // Prevent concurrent API calls\r\n    if (loading) return;\r\n    setLoading(true); // Set loading state to true\r\n\r\n    try {\r\n      const result = await axios.get(\r\n        `${apiUrl}/dish/dishes-by-category?categoryName=${selectedCategory}&pageNumber=${\r\n          pagination.page - 1\r\n        }&pageSize=${pagination.rowsPerPage}`\r\n      );\r\n      // console.log(result)\r\n      setList(result.data.content);\r\n\r\n      // For Search Bar\r\n      setFullList(result.data.content);\r\n\r\n      // pagination\r\n      const totalItems = result.data.totalElements;\r\n      // console.log(\"Total Item: \",totalItems);\r\n      const totalPages = Math.ceil(totalItems / pagination.rowsPerPage);\r\n      setPagination({\r\n        ...pagination,\r\n        totalPages: totalPages,\r\n      });\r\n\r\n      // Scroll to List Dishes section after fetching data for new category\r\n      // if (listDishesRef.current) {\r\n      //   listDishesRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n      // }\r\n    } catch (error: any) {\r\n      if (error.response && error.response.status === 404) {\r\n        // Handle 404 error here\r\n        setList([]);\r\n      } else {\r\n        // Handle other errors\r\n        alert(error);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const getUserIdByEmail = async (email: string) => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/user/find-by-email`, {\r\n        params: { email },\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      // console.log(\"User Details Home:\", response.data);\r\n      if (response.data) {\r\n        // console.log(\"IDDDDDDDDD la: \", response.data.userId)\r\n        setUserId(response.data.userId);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching User detail by email:\", error);\r\n    }\r\n  };\r\n\r\n  // [Handle] Change Category\r\n  const handleChangeSelectedCategory = (category: string) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: 1,\r\n    });\r\n    setSelectedCategory(category);\r\n  };\r\n\r\n  // [Handle] Pagination\r\n  const handlePageChange = (\r\n    event: React.ChangeEvent<unknown>,\r\n    value: number\r\n  ) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: value,\r\n    });\r\n  };\r\n  const handleRowsPerPageChange = (\r\n    event: SelectChangeEvent<number>,\r\n    child: React.ReactNode\r\n  ) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: 1,\r\n      rowsPerPage: event.target.value as number,\r\n    });\r\n    setSearchTerm(\"\");\r\n  };\r\n\r\n  // [Handle] Open and close Add Basket Dialog\r\n  const handleOpenDialog = (dish: Dish) => {\r\n    setSelectedDish(dish);\r\n    setQuantity(0);\r\n    setOpen(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setSelectedDish(null);\r\n    setQuantity(0);\r\n    setOpen(false);\r\n  };\r\n\r\n  // [Handle] Open and close Add Successfully SnackBar\r\n  const handleOpenAddSuccessSnackBar = () => {\r\n    setOpenAddSuccessSnackBar(true);\r\n  };\r\n  const handleCloseAddSuccessSnackBar = (\r\n    event: React.SyntheticEvent | Event,\r\n    reason?: string\r\n  ) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenAddSuccessSnackBar(false);\r\n  };\r\n  const action = (\r\n    <React.Fragment>\r\n      <IconButton\r\n        size=\"small\"\r\n        aria-label=\"close\"\r\n        color=\"inherit\"\r\n        onClick={handleCloseAddSuccessSnackBar}\r\n      >\r\n        <CloseIcon fontSize=\"small\" />\r\n      </IconButton>\r\n    </React.Fragment>\r\n  );\r\n\r\n  // [Handle] Add Item And Quantity To Basket Form\r\n  const handleIncrease = () => setQuantity(quantity + 1);\r\n  const handleDecrease = () => {\r\n    if (quantity > 0) {\r\n      setQuantity(quantity - 1);\r\n    }\r\n  };\r\n\r\n  // [Handle] Add Item To Basket\r\n  const handleAddToBasket = async (\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      if (!selectedDish) {\r\n        throw new Error(\"No dish selected\");\r\n      }\r\n\r\n      if (!userId) {\r\n        throw new Error(\"User ID not found\");\r\n      }\r\n\r\n      const basketItemDTO = {\r\n        dishId: selectedDish.dishId,\r\n        quantity: quantity,\r\n        createdBy: userEmail,\r\n        updatedBy: userEmail,\r\n      };\r\n\r\n      const basketDTO = {\r\n        userId: userId,\r\n        createdBy: userEmail,\r\n        updatedBy: userEmail,\r\n        basketItemList: [basketItemDTO], // Combine basketItemDTO into basketDTO\r\n      };\r\n\r\n      await axios.post(`${apiUrl}/basket/add-item`, basketDTO, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\", // Set the content type to JSON\r\n        },\r\n      });\r\n\r\n      // When adding successfully\r\n      handleCloseDialog();\r\n      window.location.reload();\r\n      handleOpenAddSuccessSnackBar();\r\n    } catch (error) {\r\n      console.error(\"Error adding item to basket:\", error);\r\n      alert(\"Failed to add item to basket. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  // [Handle] Search\r\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const searchTerm = event.target.value;\r\n    setSearchTerm(searchTerm);\r\n\r\n    // Helper function to remove diacritical marks and normalize the string\r\n    const normalizeString = (str: string) => {\r\n      return str\r\n        .normalize(\"NFD\")\r\n        .replace(/[\\u0300-\\u036f]/g, \"\")\r\n        .toLowerCase();\r\n    };\r\n\r\n    const normalizedSearchTerm = normalizeString(searchTerm);\r\n\r\n    if (normalizedSearchTerm === \"\") {\r\n      loadList();\r\n    }\r\n\r\n    const filteredDishes = fullList.filter((item: Dish) => {\r\n      return normalizeString(item.name).includes(normalizedSearchTerm);\r\n    });\r\n    setList(filteredDishes);\r\n\r\n    // Pagination base on the length of the \"filteredDishes\"\r\n    const totalItems = filteredDishes.length;\r\n    const totalPages = Math.ceil(totalItems / pagination.rowsPerPage);\r\n    setPagination({\r\n      ...pagination,\r\n      totalPages: totalPages,\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* FILTER CATEGORY */}\r\n      <div className={classes.filterContainer}>\r\n        <FilterCategory\r\n          handleChangeSelectedCategory={handleChangeSelectedCategory}\r\n        />\r\n      </div>\r\n\r\n      {/* INTRO EVENTS SLICE BAR */}\r\n      <EventsSliceBar />\r\n\r\n      {/* [SEARCH] Search */}\r\n      <Grid container justifyContent=\"center\">\r\n        <Grid item xs={12} sm={11} md={11} lg={11}>\r\n          <TextField\r\n            label={searchLabel}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            value={searchTerm}\r\n            // onChange={(e) => setSearchTerm(e.target.value)}\r\n            onChange={handleSearch}\r\n            onFocus={() => setSearchLabel(\"Search\")}\r\n            onBlur={() => setSearchLabel(\"Search (name)\")}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* LIST OF DISHES */}\r\n      <div\r\n      // ref={listDishesRef}\r\n      >\r\n        {loading ? (\r\n          <h2 style={{ marginTop: \"3rem\" }}>Loading...</h2>\r\n        ) : list.length <= 0 ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"5rem\",\r\n            }}\r\n          >\r\n            <ErrorOutlineIcon\r\n              fontSize=\"large\"\r\n              style={{ marginRight: \"10px\" }}\r\n            />\r\n            <h3>Have no any dishes in this category</h3>\r\n          </div>\r\n        ) : (\r\n          <Grid container spacing={2} sx={{ marginTop: \"0.5rem\" }}>\r\n            {list.map((item) => (\r\n              // xs:12(mobile): 1 item/row; sm:6(tablet): 2 items/row; md:4(destop-medium): 3 item/row; lg:3(destop-large): 4 items/row;\r\n              <Grid item xs={12} sm={6} md={4} lg={3} key={item.dishId}>\r\n                <Card\r\n                  className={classes.card}\r\n                  onClick={() => handleOpenDialog(item)} // Open dialog on click\r\n                >\r\n                  <div className={classes.mediaWrapper}>\r\n                    {item.discount > 0 && (\r\n                      <div className={classes.discountTag}>\r\n                        {`-${item.discount}%`}\r\n                      </div>\r\n                    )}\r\n\r\n                    <CardMedia\r\n                      className={classes.media}\r\n                      image={`data:image/jpeg;base64, ${item.image}`}\r\n                      title={item.name}\r\n                    />\r\n                  </div>\r\n\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {item.name}\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      Price:{\" \"}\r\n                      <b>\r\n                        {item.discount > 0 && (\r\n                          <>\r\n                            <del style={{ marginRight: \"0.5rem\" }}>\r\n                              {`$${item.originalPrice}`}\r\n                            </del>\r\n                          </>\r\n                        )}\r\n                        <span>\r\n                          {`$${(\r\n                            item.originalPrice *\r\n                            (1 - item.discount / 100)\r\n                          ).toFixed(2)}`}\r\n                        </span>\r\n                      </b>\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        )}\r\n      </div>\r\n\r\n      {/* PAGINATION */}\r\n      {list.length > 0 && (\r\n        <PaginationBar\r\n          pagination={pagination}\r\n          handleRowsPerPageChange={handleRowsPerPageChange}\r\n          handlePageChange={handlePageChange}\r\n        />\r\n      )}\r\n\r\n      {/* [DIALOG] FOR DISH DETAILS */}\r\n      {selectedDish && (\r\n        <Dialog open={open} onClose={handleCloseDialog}>\r\n          <DialogTitle>{selectedDish.name}</DialogTitle>\r\n          <DialogContent>\r\n            <PopupDishDetail\r\n              onClose={handleCloseDialog}\r\n              selectedDishId={selectedDish.dishId}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <hr\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"1px\",\r\n                  backgroundColor: \"#e7e9eb\",\r\n                  border: \"none\",\r\n                }}\r\n              />\r\n\r\n              <Grid item>\r\n                <AddToBasketForm\r\n                  quantity={quantity}\r\n                  handleIncrease={handleIncrease}\r\n                  handleDecrease={handleDecrease}\r\n                  handleAddToBasket={handleAddToBasket}\r\n                  dishPrice={\r\n                    selectedDish.originalPrice *\r\n                    (1 - selectedDish.discount / 100) *\r\n                    quantity\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={handleCloseDialog}\r\n                  color=\"primary\"\r\n                >\r\n                  Close\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogActions>\r\n        </Dialog>\r\n      )}\r\n\r\n      {/* [SNACKBAR] ADD TO BASKET SUCCESSFULLY */}\r\n      <Snackbar\r\n        open={openAddSuccessSnackBar}\r\n        autoHideDuration={6000} // 6000 = 6s\r\n        onClose={handleCloseAddSuccessSnackBar}\r\n        message=\"You added the dish to basket successfully !\"\r\n        action={action}\r\n        sx={{\r\n          \"& .MuiSnackbarContent-root\": {\r\n            backgroundColor: \"green\",\r\n            color: \"white\",\r\n          },\r\n        }}\r\n      />\r\n\r\n      {/* ADD MORE */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["_ref","handleChangeSelectedCategory","categories","setCategories","useState","selectedCategory","setSelectedCategory","useEffect","fetchCategories","async","response","axios","get","concat","apiUrl","data","error","status","console","log","_jsx","Tabs","variant","scrollButtons","value","onChange","handleChangeCategory","event","category","encodeURIComponent","style","background","borderBottom","borderRadius","paddingTop","sx","color","width","height","backgroundColor","children","map","index","Tab","margin","label","replace","fontSize","useStyles","makeStyles","paginationContainer","marginTop","display","justifyContent","alignItems","dropdownRowPerPageLabel","marginRight","dropdownRowPerPage","pagination","handleRowsPerPageChange","handlePageChange","classes","_jsxs","className","FormControl","Select","labelId","id","rowsPerPage","MenuItem","Pagination","count","totalPages","page","shape","sliderImage","maxHeight","EmptyArrow","props","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","nextArrow","prevArrow","list","name","image","process","marginBottom","Slider","item","src","alt","onClose","selectedDishId","dish","setDish","fetchDishDetails","DialogContentText","_Fragment","Typography","discount","originalPrice","toFixed","preparationTime","mealSet","quantity","handleIncrease","handleDecrease","handleAddToBasket","dishPrice","expiredToken","checkTokenIsExpired","Grid","container","spacing","IconButton","paddingLeft","disabled","onClick","RemoveCircleOutlineIcon","AddCircleIcon","Button","padding","overflow","component","whiteSpace","ErrorIcon","root","flexGrow","marginLeft","card","cursor","transition","transform","media","mediaWrapper","position","discountTag","top","left","zIndex","filterContainer","HomePage","accessToken","useAuthToken","decodeToken","getDecodeToken","userEmail","sub","setList","fullList","setFullList","loading","setLoading","setPagination","open","setOpen","selectedDish","setSelectedDish","setQuantity","userId","setUserId","openAddSuccessSnackBar","setOpenAddSuccessSnackBar","React","searchLabel","setSearchLabel","searchTerm","setSearchTerm","loadList","getUserIdByEmail","result","content","totalItems","totalElements","Math","ceil","alert","params","email","headers","Authorization","handleCloseDialog","handleCloseAddSuccessSnackBar","reason","action","size","CloseIcon","FilterCategory","EventsSliceBar","xs","sm","md","lg","TextField","fullWidth","target","normalizeString","str","normalize","toLowerCase","normalizedSearchTerm","filteredDishes","filter","includes","length","onFocus","onBlur","ErrorOutlineIcon","Card","CardMedia","title","CardContent","gutterBottom","dishId","PaginationBar","child","Dialog","DialogTitle","DialogContent","PopupDishDetail","DialogActions","border","AddToBasketForm","preventDefault","Error","basketItemDTO","createdBy","updatedBy","basketDTO","basketItemList","post","window","location","reload","Snackbar","autoHideDuration","message"],"sourceRoot":""}