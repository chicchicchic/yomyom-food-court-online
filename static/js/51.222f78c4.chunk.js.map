{"version":3,"file":"static/js/51.222f78c4.chunk.js","mappings":"qNAqBA,MAAMA,GAAYC,EAAAA,EAAAA,GAAW,CAC3BC,oBAAqB,CACnBC,UAAW,OACXC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdC,wBAAyB,CACvBC,YAAa,QAEfC,mBAAoB,CAClBD,YAAa,UAwCjB,EApCiDE,IAI1C,IAJ2C,WAChDC,EAAU,wBACVC,EAAuB,iBACvBC,GACDH,EACC,MAAMI,EAAUd,IAEhB,OACEe,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQZ,oBAAoBe,SAAA,EAG1CC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAACH,UAAWF,EAAQL,mBAAmBQ,UACjDF,EAAAA,EAAAA,MAACK,EAAAA,EAAM,CACLC,QAAQ,sBACRC,GAAG,gBACHC,MAAOZ,EAAWa,YAClBC,SAAUb,EAAwBK,SAAA,EAElCC,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACH,MAAO,EAAEN,SAAC,OACpBC,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACH,MAAO,GAAGN,SAAC,QACrBC,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACH,MAAO,GAAGN,SAAC,aAKzBC,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CACTC,MAAOjB,EAAWkB,WAClBC,KAAMnB,EAAWmB,KACjBL,SAAUZ,EACVkB,QAAQ,WACRC,MAAM,cAEJ,C,wPCoVV,QAvVA,WACE,MAAMC,GAAcC,EAAAA,EAAAA,OACbC,EAAMC,IAAWC,EAAAA,EAAAA,UAAkB,KACnCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAEhC1B,EAAY6B,IAAiBH,EAAAA,EAAAA,UAAS,CAC3CP,KAAM,EACNN,YAAa,EACbK,WAAY,KAER,KAAEC,EAAI,YAAEN,GAAgBb,GACvB8B,EAAmBC,IAAwBL,EAAAA,EAAAA,UAChD,OAIFM,EAAAA,EAAAA,YAAU,KACRC,GAAa,GACZ,CAACd,EAAMN,EAAaS,IACvB,MAAMW,EAAcC,UAClBN,GAAW,GACX,IACE,MAAMO,QAAiBC,EAAAA,EAAMC,IAAI,GAADC,OAC3BC,EAAAA,EAAM,kDAAAD,OACPtC,EAAWmB,KAAO,EAAC,cAAAmB,OACRtC,EAAWa,aACxB,CACE2B,QAAS,CACPC,cAAc,UAADH,OAAYhB,MAK/BoB,QAAQC,IAAI,4BAA6BR,EAASS,KAAKC,SACvDpB,EAAQU,EAASS,KAAKC,SAGtB,MAAMC,EAAaX,EAASS,KAAKG,cAE3B7B,EAAa8B,KAAKC,KAAKH,EAAa9C,EAAWa,aACrDgB,EAAc,IACT7B,EACHkB,WAAYA,GAEhB,CAAE,MAAOgC,GACHA,EAAMf,UAAsC,MAA1Be,EAAMf,SAASgB,OAEnC1B,EAAQ,IAGR2B,MAAMF,EAEV,CAAC,QACCtB,GAAW,EACb,GA8BF,OACExB,EAAAA,EAAAA,MAAAiD,EAAAA,SAAA,CAAA/C,SAAA,CAEGqB,GACCpB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBAEJC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAc,CAACC,MAAO,CAAEC,UAAW,QAASC,UAAW,QAASnD,UAC/DF,EAAAA,EAAAA,MAACsD,EAAAA,EAAK,CAACrD,UAAU,gBAAeC,SAAA,EAC9BC,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAACC,GAAI,CAAEC,gBAAiB,WAAYvD,UAC5CF,EAAAA,EAAAA,MAAC0D,EAAAA,EAAQ,CAAAxD,SAAA,EACPC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACC,MAAM,SAASJ,GAAI,CAAEK,MAAO,cAEvC1D,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACC,MAAM,SAASJ,GAAI,CAAEK,MAAO,WAAY3D,SAAC,cAGpDC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACC,MAAM,SAASJ,GAAI,CAAEK,MAAO,WAAY3D,SAAC,YAGpDC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACC,MAAM,SAASJ,GAAI,CAAEK,MAAO,WAAY3D,SAAC,mBAGpDC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACC,MAAM,SAASJ,GAAI,CAAEK,MAAO,WAAY3D,SAAC,aAGpDC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACC,MAAM,SAASJ,GAAI,CAAEK,MAAO,WAAY3D,SAAC,mBAGpDC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACC,MAAM,SAASJ,GAAI,CAAEK,MAAO,WAAY3D,SAAC,WAGpDC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACC,MAAM,SAASJ,GAAI,CAAEK,MAAO,WAAY3D,SAAC,oBAGpDC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACC,MAAM,SAASJ,GAAI,CAAEK,MAAO,WAAY3D,SAAC,2BAGpDC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACC,MAAM,SAASJ,GAAI,CAAEK,MAAO,WAAY3D,SAAC,gBAGpDC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACC,MAAM,SAASJ,GAAI,CAAEK,MAAO,WAAY3D,SAAC,oBAMvC,IAAhBkB,EAAK0C,QACJ3D,EAAAA,EAAAA,KAAC4D,EAAAA,EAAS,CAAA7D,UACRC,EAAAA,EAAAA,KAACuD,EAAAA,EAAQ,CAAAxD,UACPC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRK,QAAS,EACTJ,MAAM,SACNT,MAAO,CAAEc,SAAU,QAAS/D,SAC7B,uCAMLC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAS,CAAA7D,SACPkB,EAAK8C,KAAI,CAACC,EAAUC,KACnBpE,EAAAA,EAAAA,MAAAiD,EAAAA,SAAA,CAAA/C,SAAA,EAEEF,EAAAA,EAAAA,MAAC0D,EAAAA,EAAQ,CAAAxD,SAAA,EACPC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACC,MAAM,SAAST,MAAO,CAAEkB,SAAU,KAAMnE,UACjDC,EAAAA,EAAAA,KAACmE,EAAAA,EAAM,CACLC,QAASA,KAAMC,OAtEbC,EAsE8BN,EAASM,aArE/D9C,EAAqBD,IAAsB+C,EAAU,KAAOA,GADpCA,KAsEgD,EAAAvE,SAEjDwB,IAAsByC,EAASM,SAC9BtE,EAAAA,EAAAA,KAACuE,EAAAA,EAAiB,KAElBvE,EAAAA,EAAAA,KAACwE,EAAAA,EAAmB,CAACnB,GAAI,CAAEK,MAAO,gBAIxC1D,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNT,MAAO,CAAEc,SAAU,OAAQI,SAAU,IAAKnE,SAEzCiE,EAASM,WAEZtE,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNT,MAAO,CAAEc,SAAU,OAAQI,SAAU,KAAMnE,SAE1CiE,EAASS,mBAEZzE,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNT,MAAO,CAAEc,SAAU,OAAQI,SAAU,KAAMnE,SAE1CiE,EAASU,gBAEZ1E,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNT,MAAO,CAAEc,SAAU,OAAQI,SAAU,KAAMnE,SAE1CiE,EAASW,WAEZ9E,EAAAA,EAAAA,MAAC2D,EAAAA,EAAS,CACRC,MAAM,SACNT,MAAO,CAAEc,SAAU,OAAQI,SAAU,KAAMnE,SAAA,CAC5C,IACGiE,EAASY,iBAEb5E,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNT,MAAO,CAAEc,SAAU,OAAQI,SAAU,KAAMnE,SAE1CiE,EAASa,OAAS,OAErB7E,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNT,MAAO,CAAEc,SAAU,OAAQI,SAAU,KAAMnE,SAE1CiE,EAASc,iBAEZ9E,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNT,MAAO,CAAEc,SAAU,OAAQI,SAAU,KAAMnE,SAE1CiE,EAASe,SAEZ/E,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNT,MAAO,CAAEc,SAAU,OAAQI,SAAU,KAAMnE,SAE1CiF,IAAOhB,EAASiB,WAAWC,OAC1B,8BAGJlF,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNT,MAAO,CAAEc,SAAU,OAAQI,SAAU,KAAMnE,SAE1CiE,EAASmB,cAxECnB,EAASM,SA6EvB/C,IAAsByC,EAASM,UAC9BtE,EAAAA,EAAAA,KAACuD,EAAAA,EAAQ,CAAAxD,UACPC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACK,QAAS,GAAG9D,UACrBF,EAAAA,EAAAA,MAACsD,EAAAA,EAAK,CAAApD,SAAA,EACJC,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAAArD,UACRF,EAAAA,EAAAA,MAAC0D,EAAAA,EAAQ,CAAAxD,SAAA,EACPC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SAENJ,GAAI,CAAE+B,OAAQ,OAAQC,QAAS,MAEjCrF,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNJ,GAAI,CAAEiC,WAAY,KAAMvF,SACzB,SAGDC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNJ,GAAI,CAAEiC,WAAY,KAAMvF,SACzB,YAGDC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNJ,GAAI,CAAEiC,WAAY,KAAMvF,SACzB,eAGDC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNJ,GAAI,CAAEiC,WAAY,KAAMvF,SACzB,WAGDC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNJ,GAAI,CAAEiC,WAAY,KAAMvF,SACzB,cAGDC,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNJ,GAAI,CAAEiC,WAAY,KAAMvF,SACzB,sBAMLC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAS,CAAA7D,SACPiE,EAASuB,WAAWxB,KACnB,CAACyB,EAAiBvB,KAChBpE,EAAAA,EAAAA,MAAC0D,EAAAA,EAAQ,CAAAxD,SAAA,CACI,IAAVkE,IACCjE,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNgC,QAASzB,EAASuB,WAAW5B,OAC7BN,GAAI,CAAE+B,OAAQ,WAGlBpF,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACC,MAAM,SAAQ1D,SACtBkE,EAAQ,KAEXjE,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACC,MAAM,SAAQ1D,SACtByF,EAAKE,uBAER1F,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACC,MAAM,SAAQ1D,SACtByF,EAAKG,YAER3F,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,MAAM,SACNT,MAAO,CACLc,SAAU,OACV8B,SAAU,IACV7F,UAEFC,EAAAA,EAAAA,KAAC6F,EAAAA,EAAS,CACRC,UAAU,MACVC,OAAO,MACPC,MAAM,MACNC,IAAG,2BAAAlE,OAA6ByD,EAAKU,WACrCC,IAAKX,EAAKG,SACV3C,MAAO,CAAEoD,UAAW,aAGxBpG,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAACC,MAAM,SAAQ1D,SACtByF,EAAKa,YAERxG,EAAAA,EAAAA,MAAC2D,EAAAA,EAAS,CAACC,MAAM,SAAQ1D,SAAA,CAAC,IACtByF,EAAKc,gBArCId,EAAKe,qCA0DhDvG,EAAAA,EAAAA,KAACwG,EAAAA,EAAa,CACZ/G,WAAYA,EACZC,wBA7Q0BA,CAC9B+G,EACAC,KAEApF,EAAc,IACT7B,EACHmB,KAAM,EACNN,YAAamG,EAAME,OAAOtG,OAC1B,EAsQEV,iBAvRmBA,CACvB8G,EACApG,KAEAiB,EAAc,IACT7B,EACHmB,KAAMP,GACN,MAoRN,C,sBCnZIuG,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,qJACD,kB,sBCTAP,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,wJACD,gB,0ICVG,SAASC,EAAyBC,GACvC,OAAOC,EAAAA,EAAAA,IAAqB,eAAgBD,EAC9C,EACyBE,EAAAA,EAAAA,GAAuB,eAAgB,CAAC,OAAQ,QAAS,Q,eCDlF,MAAMC,EAAY,CAAC,WAAY,YAAa,YAAa,QAAS,MAAO,SAqBnEC,GAAgBC,EAAAA,EAAAA,IAAO,MAAO,CAClCC,KAAM,eACNN,KAAM,OACNO,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,GACE,iBACJG,EAAgB,iBAChBC,GACEF,EACJ,MAAO,CAACD,EAAOI,KAAMF,GAAoBF,EAAOK,MAAOF,GAAoBH,EAAOM,IAAI,GAXpEV,EAanBlI,IAAA,IAAC,WACFuI,GACDvI,EAAA,OAAK6I,EAAAA,EAAAA,GAAS,CACbnJ,QAAS,QACToJ,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,UACnBT,EAAWC,kBAAoB,CAChChC,MAAO,QACN+B,EAAWE,kBAAoB,CAEhC7B,UAAW,SACX,IACIqC,EAAmB,CAAC,QAAS,QAAS,UAAW,SAAU,OAC3DC,EAAmB,CAAC,UAAW,OAqFrC,EApF+BC,EAAAA,YAAiB,SAAmBC,EAASC,GAC1E,MAAMhB,GAAQiB,EAAAA,EAAAA,GAAc,CAC1BjB,MAAOe,EACPjB,KAAM,kBAEF,SACF5H,EAAQ,UACRD,EAAS,UACTgG,EAAY,MAAK,MACjBiD,EAAK,IACL9C,EAAG,MACHjD,GACE6E,EACJmB,GAAQC,EAAAA,EAAAA,GAA8BpB,EAAOL,GACzCQ,GAA4D,IAAzCS,EAAiBS,QAAQpD,GAC5CqD,GAAiBnB,GAAoBe,GAAQV,EAAAA,EAAAA,GAAS,CAC1De,gBAAiB,QAAFrH,OAAUgH,EAAK,OAC7B/F,GAASA,EACN+E,GAAaM,EAAAA,EAAAA,GAAS,CAAC,EAAGR,EAAO,CACrC/B,YACAkC,mBACAC,kBAA2D,IAAzCS,EAAiBQ,QAAQpD,KAEvClG,EA9DkBmI,KACxB,MAAM,QACJnI,EAAO,iBACPoI,EAAgB,iBAChBC,GACEF,EACEsB,EAAQ,CACZnB,KAAM,CAAC,OAAQF,GAAoB,QAASC,GAAoB,QAElE,OAAOqB,EAAAA,EAAAA,GAAeD,EAAOjC,EAA0BxH,EAAQ,EAqD/C2J,CAAkBxB,GAClC,OAAoB/H,EAAAA,EAAAA,KAAKyH,GAAeY,EAAAA,EAAAA,GAAS,CAC/CvI,WAAW0J,EAAAA,EAAAA,GAAK5J,EAAQsI,KAAMpI,GAC9B2J,GAAI3D,EACJ4D,MAAO1B,GAAoBe,EAAQ,WAAQY,EAC3Cd,IAAKA,EACL7F,MAAOmG,EACPpB,WAAYA,EACZ9B,IAAK+B,EAAmBe,GAAS9C,OAAM0D,GACtCX,EAAO,CACRjJ,SAAUA,IAEd,G","sources":["CommonComponent/Pagination/index.tsx","pages/OrderManagment/TrashOrderManagementListPage/index.tsx","../node_modules/@mui/icons-material/ArrowCircleDown.js","../node_modules/@mui/icons-material/ArrowCircleUp.js","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Pagination,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  SelectChangeEvent,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\ninterface PaginationProps {\r\n    pagination: {\r\n      rowsPerPage: number;\r\n      totalPages: number;\r\n      page: number;\r\n    };\r\n    handleRowsPerPageChange: (event: SelectChangeEvent<number>, child: React.ReactNode) => void;\r\n    handlePageChange: (event: React.ChangeEvent<unknown>, value: number) => void;\r\n  }\r\n\r\nconst useStyles = makeStyles({\r\n  paginationContainer: {\r\n    marginTop: \"2rem\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  dropdownRowPerPageLabel: {\r\n    marginRight: \"1rem\",\r\n  },\r\n  dropdownRowPerPage: {\r\n    marginRight: \"3rem\",\r\n  },\r\n});\r\n\r\nconst PaginationBar: React.FC<PaginationProps> = ({\r\n  pagination,\r\n  handleRowsPerPageChange,\r\n  handlePageChange,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.paginationContainer}>\r\n      {/* Dropdown menu for rows per page */}\r\n     \r\n      <FormControl className={classes.dropdownRowPerPage}>\r\n        <Select\r\n          labelId=\"rows-per-page-label\"\r\n          id=\"rows-per-page\"\r\n          value={pagination.rowsPerPage}\r\n          onChange={handleRowsPerPageChange}\r\n        >\r\n          <MenuItem value={5}>5</MenuItem>\r\n          <MenuItem value={10}>10</MenuItem>\r\n          <MenuItem value={20}>20</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      {/* Pagination */}\r\n      <Pagination\r\n        count={pagination.totalPages} // Total number of pages\r\n        page={pagination.page} // Current page\r\n        onChange={handlePageChange} // Event handler for page change\r\n        variant=\"outlined\"\r\n        shape=\"rounded\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginationBar;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  SelectChangeEvent,\r\n  Grid,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Typography,\r\n  Container,\r\n  CardMedia,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport ArrowCircleUpIcon from \"@mui/icons-material/ArrowCircleUp\";\r\nimport ArrowCircleDownIcon from \"@mui/icons-material/ArrowCircleDown\";\r\nimport axios from \"axios\";\r\nimport { useAuthToken } from \"../../../utils/Auth/authUtils\";\r\nimport PaginationBar from \"../../../CommonComponent/Pagination\";\r\nimport { apiUrl } from \"../../../variable/globalVariable\";\r\n\r\ninterface OrderItem {\r\n  orderItemId: number;\r\n\r\n  quantity: number;\r\n  totalPrice: number;\r\n  orderItemStatusEnum: string;\r\n  dishName?: string;\r\n  dishImage?: string;\r\n\r\n  createdAt: string;\r\n  createdBy: string;\r\n  updatedBy: string;\r\n  deleted: boolean;\r\n}\r\n\r\ninterface Order {\r\n  orderId: number;\r\n\r\n  address: string;\r\n  phone: string;\r\n  totalPayment: number;\r\n  paymentMethod: string;\r\n  deliveryTime: string;\r\n  notes: string;\r\n  orderStatusEnum: string;\r\n  orderItems: OrderItem[];\r\n\r\n  createdAt: string;\r\n  createdBy: string;\r\n  updatedBy: string;\r\n  deleted: boolean;\r\n}\r\n\r\nfunction TrashOrderManagementListPage() {\r\n  const accessToken = useAuthToken();\r\n  const [list, setList] = useState<Order[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    rowsPerPage: 5,\r\n    totalPages: 1,\r\n  });\r\n  const { page, rowsPerPage } = pagination;\r\n  const [visibleOrderItems, setVisibleOrderItems] = useState<number | null>(\r\n    null\r\n  );\r\n\r\n  // [Handle] Fetch All Orders And Order Items Of Each Order (isDeleted: true)\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, [page, rowsPerPage, accessToken]);\r\n  const fetchOrders = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiUrl}/order-management/order-trash-list?pageNumber=${\r\n          pagination.page - 1\r\n        }&pageSize=${pagination.rowsPerPage}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(\"response.data.content >: \", response.data.content);\r\n      setList(response.data.content);\r\n\r\n      // pagination\r\n      const totalItems = response.data.totalElements;\r\n      // console.log(totalItems)\r\n      const totalPages = Math.ceil(totalItems / pagination.rowsPerPage);\r\n      setPagination({\r\n        ...pagination,\r\n        totalPages: totalPages,\r\n      });\r\n    } catch (error: any) {\r\n      if (error.response && error.response.status === 404) {\r\n        // Handle 404 error here\r\n        setList([]);\r\n      } else {\r\n        // Handle other errors\r\n        alert(error);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // [Handle] Pagination\r\n  const handlePageChange = (\r\n    event: React.ChangeEvent<unknown>,\r\n    value: number\r\n  ) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: value,\r\n    });\r\n  };\r\n  const handleRowsPerPageChange = (\r\n    event: SelectChangeEvent<number>,\r\n    child: React.ReactNode\r\n  ) => {\r\n    setPagination({\r\n      ...pagination,\r\n      page: 1,\r\n      rowsPerPage: event.target.value as number,\r\n    });\r\n  };\r\n\r\n  // [Handle] Handle Show/Hide Order Items (Sub-Records Of Each Order)\r\n  const toggleOrderItems = (orderId: number) => {\r\n    setVisibleOrderItems(visibleOrderItems === orderId ? null : orderId);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* [LIST] List All Orders And Their Order Items (Sub-Records) */}\r\n      {loading ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <TableContainer style={{ maxHeight: \"350px\", overflowY: \"auto\" }}>\r\n          <Table className=\"border shadow\">\r\n            <TableHead sx={{ backgroundColor: \"#000000\" }}>\r\n              <TableRow>\r\n                <TableCell align=\"center\" sx={{ color: \"#ffffff\" }}>\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ color: \"#ffffff\" }}>\r\n                  Order ID\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ color: \"#ffffff\" }}>\r\n                  Status\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ color: \"#ffffff\" }}>\r\n                  Delivery Time\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ color: \"#ffffff\" }}>\r\n                  Address\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ color: \"#ffffff\" }}>\r\n                  Total Payment\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ color: \"#ffffff\" }}>\r\n                  Notes\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ color: \"#ffffff\" }}>\r\n                  Payment Method\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ color: \"#ffffff\" }}>\r\n                  Delivery Phone Number\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ color: \"#ffffff\" }}>\r\n                  Ordered At\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ color: \"#ffffff\" }}>\r\n                  Ordered By\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            {list.length === 0 ? (\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={7}\r\n                    align=\"center\"\r\n                    style={{ fontSize: \"14px\" }}\r\n                  >\r\n                    (Have no any record founded!)\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            ) : (\r\n              <TableBody>\r\n                {list.map((listItem, index) => (\r\n                  <>\r\n                    {/* [MAIN-RECORDS] */}\r\n                    <TableRow key={listItem.orderId}>\r\n                      <TableCell align=\"center\" style={{ minWidth: 100 }}>\r\n                        <Button\r\n                          onClick={() => toggleOrderItems(listItem.orderId)}\r\n                        >\r\n                          {visibleOrderItems === listItem.orderId ? (\r\n                            <ArrowCircleUpIcon />\r\n                          ) : (\r\n                            <ArrowCircleDownIcon sx={{ color: \"green\" }} />\r\n                          )}\r\n                        </Button>\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ fontSize: \"14px\", minWidth: 70 }}\r\n                      >\r\n                        {listItem.orderId}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ fontSize: \"14px\", minWidth: 100 }}\r\n                      >\r\n                        {listItem.orderStatusEnum}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ fontSize: \"14px\", minWidth: 200 }}\r\n                      >\r\n                        {listItem.deliveryTime}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ fontSize: \"14px\", minWidth: 200 }}\r\n                      >\r\n                        {listItem.address}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ fontSize: \"14px\", minWidth: 200 }}\r\n                      >\r\n                        ${listItem.totalPayment}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ fontSize: \"14px\", minWidth: 200 }}\r\n                      >\r\n                        {listItem.notes || \"-\"}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ fontSize: \"14px\", minWidth: 200 }}\r\n                      >\r\n                        {listItem.paymentMethod}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ fontSize: \"14px\", minWidth: 100 }}\r\n                      >\r\n                        {listItem.phone}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ fontSize: \"14px\", minWidth: 300 }}\r\n                      >\r\n                        {moment(listItem.createdAt).format(\r\n                          \"MMMM Do YYYY, h:mm:ss a\"\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ fontSize: \"14px\", minWidth: 200 }}\r\n                      >\r\n                        {listItem.createdBy}\r\n                      </TableCell>\r\n                    </TableRow>\r\n\r\n                    {/* [SUB-RECORDS] */}\r\n                    {visibleOrderItems === listItem.orderId && (\r\n                      <TableRow>\r\n                        <TableCell colSpan={12}>\r\n                          <Table>\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell\r\n                                  align=\"center\"\r\n                                  // colSpan={1}\r\n                                  sx={{ border: \"none\", padding: 0 }}\r\n                                ></TableCell>\r\n                                <TableCell\r\n                                  align=\"center\"\r\n                                  sx={{ fontWeight: 600 }}\r\n                                >\r\n                                  No.\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  align=\"center\"\r\n                                  sx={{ fontWeight: 600 }}\r\n                                >\r\n                                  Status\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  align=\"center\"\r\n                                  sx={{ fontWeight: 600 }}\r\n                                >\r\n                                  Item Name\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  align=\"center\"\r\n                                  sx={{ fontWeight: 600 }}\r\n                                >\r\n                                  Image\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  align=\"center\"\r\n                                  sx={{ fontWeight: 600 }}\r\n                                >\r\n                                  Quantity\r\n                                </TableCell>\r\n                                <TableCell\r\n                                  align=\"center\"\r\n                                  sx={{ fontWeight: 600 }}\r\n                                >\r\n                                  Total Price\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                              {listItem.orderItems.map(\r\n                                (item: OrderItem, index: number) => (\r\n                                  <TableRow key={item.orderItemId}>\r\n                                    {index === 0 && (\r\n                                      <TableCell\r\n                                        align=\"center\"\r\n                                        rowSpan={listItem.orderItems.length}\r\n                                        sx={{ border: \"none\" }}\r\n                                      ></TableCell>\r\n                                    )}\r\n                                    <TableCell align=\"center\">\r\n                                      {index + 1}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      {item.orderItemStatusEnum}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      {item.dishName}\r\n                                    </TableCell>\r\n                                    <TableCell\r\n                                      align=\"center\"\r\n                                      style={{\r\n                                        fontSize: \"14px\",\r\n                                        maxWidth: 50,\r\n                                      }}\r\n                                    >\r\n                                      <CardMedia\r\n                                        component=\"img\"\r\n                                        height=\"100\"\r\n                                        width=\"100\"\r\n                                        src={`data:image/jpeg;base64, ${item.dishImage}`}\r\n                                        alt={item.dishName}\r\n                                        style={{ objectFit: \"fill\" }} // Types: fill, none, cover, contain, inherit\r\n                                      />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      {item.quantity}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      ${item.totalPrice}\r\n                                    </TableCell>\r\n\r\n                                    {/* Other cells */}\r\n                                  </TableRow>\r\n                                )\r\n                              )}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </>\r\n                ))}\r\n              </TableBody>\r\n            )}\r\n          </Table>\r\n        </TableContainer>\r\n      )}\r\n\r\n      {/* [SECTION] Pagination */}\r\n      <PaginationBar\r\n        pagination={pagination}\r\n        handleRowsPerPageChange={handleRowsPerPageChange}\r\n        handlePageChange={handlePageChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TrashOrderManagementListPage;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4c4.41 0 8 3.59 8 8s-3.59 8-8 8-8-3.59-8-8 3.59-8 8-8m0-2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 10V8h-2v4H8l4 4 4-4z\"\n}), 'ArrowCircleDown');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 20c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8m0 2c5.52 0 10-4.48 10-10S17.52 2 12 2 2 6.48 2 12s4.48 10 10 10m-1-10v4h2v-4h3l-4-4-4 4z\"\n}), 'ArrowCircleUp');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      image,\n      src,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;"],"names":["useStyles","makeStyles","paginationContainer","marginTop","display","justifyContent","alignItems","dropdownRowPerPageLabel","marginRight","dropdownRowPerPage","_ref","pagination","handleRowsPerPageChange","handlePageChange","classes","_jsxs","className","children","_jsx","FormControl","Select","labelId","id","value","rowsPerPage","onChange","MenuItem","Pagination","count","totalPages","page","variant","shape","accessToken","useAuthToken","list","setList","useState","loading","setLoading","setPagination","visibleOrderItems","setVisibleOrderItems","useEffect","fetchOrders","async","response","axios","get","concat","apiUrl","headers","Authorization","console","log","data","content","totalItems","totalElements","Math","ceil","error","status","alert","_Fragment","TableContainer","style","maxHeight","overflowY","Table","TableHead","sx","backgroundColor","TableRow","TableCell","align","color","length","TableBody","colSpan","fontSize","map","listItem","index","minWidth","Button","onClick","toggleOrderItems","orderId","ArrowCircleUpIcon","ArrowCircleDownIcon","orderStatusEnum","deliveryTime","address","totalPayment","notes","paymentMethod","phone","moment","createdAt","format","createdBy","border","padding","fontWeight","orderItems","item","rowSpan","orderItemStatusEnum","dishName","maxWidth","CardMedia","component","height","width","src","dishImage","alt","objectFit","quantity","totalPrice","orderItemId","PaginationBar","event","child","target","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardMediaRoot","styled","name","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","_extends","backgroundSize","backgroundRepeat","backgroundPosition","MEDIA_COMPONENTS","IMAGE_COMPONENTS","React","inProps","ref","useThemeProps","image","other","_objectWithoutPropertiesLoose","indexOf","composedStyle","backgroundImage","slots","composeClasses","useUtilityClasses","clsx","as","role","undefined"],"sourceRoot":""}